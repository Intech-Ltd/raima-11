<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:tocPath="Utility Programs|Utility Function Descriptions" MadCap:InPreviewMode="false" MadCap:PreloadImages="false" MadCap:RuntimeFileType="Topic" MadCap:TargetType="WebHelp" lang="en-us" xml:lang="en-us" class="" MadCap:PathToHelpSystem="../../../" MadCap:HelpSystemFileName="Default.xml" MadCap:SearchType="Stem">
    <head>
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>d_ddlp</title>
        <link rel="icon" type="image/png" href="http://docs.raima.com/favicon.png" />
        <link href="../../SkinSupport/MadCap.css" rel="stylesheet" />
        <link href="../../Resources/TableStyles/ParamStruct.css" rel="stylesheet" />
        <link href="../../Resources/TableStyles/FunctionArgs.css" rel="stylesheet" />
        <link href="../../Resources/TableStyles/CoreErrCodes.css" rel="stylesheet" />
        <link href="../../Resources/Stylesheets/raima.css" rel="stylesheet" />
        <script src="../../SkinSupport/MadCapAll.js" type="text/javascript">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink MCWebHelpFramesetLinkTop" style="display: none;"><a href="../../../Default_CSH.htm#RM/utilapi/d_ddlp.htm" style="">Open topic with navigation</a>
        </p>
        <div class="MCBreadcrumbsBox_0"><span class="MCBreadcrumbsPrefix">You are here: </span><a class="MCBreadcrumbsLink" href="../../dbUTIL.htm">Utility Programs</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="../Chapter39.htm">Utility Function Descriptions</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">d_ddlp</span>
        </div>
        <h3 class="newpage"><a name="kanchor427"></a>d_ddlp</h3>
        <p>Database definition language processor API.</p>
        <p class="Heading">Prototype</p><pre xml:space="preserve">int32_t <b>d_ddlp</b>(
    const DDLP_PARAMS   *<i>params</i>,
    int32_t             *<i>num_errors</i>,
    int32_t             *<i>num_warnings</i>);</pre><pre xml:space="preserve">int32_t <b>d_ddlpW</b>(
    const DDLP_PARAMSW   *<i>params</i>,
    int32_t              *<i>num_errors</i>,
    int32_t              *<i>num_warnings</i>);</pre>
        <p class="Heading">Parameters</p>
        <table style="width: 100%;mc-table-style: url('../../Resources/TableStyles/FunctionArgs.css');margin-left: 0;margin-right: auto;" class="TableStyle-FunctionArgs" cellspacing="0">
            <col style="width: 140px;" class="Column-Column1" />
            <col style="width: 80px;" class="Column-Column3" />
            <col class="Column-Column2" />
            <tbody>
                <tr class="Body-Body1">
                    <td class="BodyE-Column1-Body1">params</td>
                    <td class="BodyE-Column3-Body1">(input)</td>
                    <td class="BodyD-Column2-Body1">A pointer to a DDLP_PARAMS structure.</td>
                </tr>
                <tr class="Body-Body1">
                    <td class="BodyE-Column1-Body1">num_errors</td>
                    <td class="BodyE-Column3-Body1">(output)</td>
                    <td class="BodyD-Column2-Body1">The number of errors encountered processing the DDL specification</td>
                </tr>
                <tr class="Body-Body1">
                    <td class="BodyB-Column1-Body1">num_warning</td>
                    <td class="BodyB-Column3-Body1">(output)</td>
                    <td class="BodyA-Column2-Body1">The number of warnings encountered processing the DDL specification</td>
                </tr>
            </tbody>
        </table>
        <p class="Heading">Description</p>
        <p>The <b>d_ddlp</b> utility API compiles the DDL specification contained in the text <code>ddlfile</code>, and generates the database dictionary (<code>dbname.dbd</code>) and the database header file (<code>dbname.h</code>).  DDL errors will be reported in the <code>stderr_file</code> with the line number where the error was first detected.</p>
        <table style="width: 100%;border-left-style: solid;border-left-width: 1px;border-left-color: #c0c0c0;border-right-style: solid;border-right-width: 1px;border-right-color: #c0c0c0;border-top-style: solid;border-top-width: 1px;border-top-color: #c0c0c0;border-bottom-style: solid;border-bottom-width: 1px;border-bottom-color: #c0c0c0;border-collapse: collapse;margin-left: 0;margin-right: auto;mc-table-style: url('../../Resources/TableStyles/ParamStruct.css');caption-side: top;" class="TableStyle-ParamStruct" cellspacing="0">
            <caption>DDLP_PARAMS structure</caption>
            <col style="width: 110px;" class="Column-Column1" />
            <col style="width: 129px;" class="Column-Column2" />
            <col class="Column-Column3" />
            <thead>
                <tr class="Head-Header1">
                    <th class="HeadE-Column1-Header1">Member</th>
                    <th class="HeadE-Column2-Header1">Type</th>
                    <th class="HeadD-Column3-Header1">Description</th>
                </tr>
            </thead>
            <tbody>
                <tr class="Body-Body1">
                    <td style="font-family: monospace;" class="BodyE-Column1-Body1">quiet</td>
                    <td style="font-family: monospace;" class="BodyE-Column2-Body1">DB_BOOLEAN</td>
                    <td class="BodyD-Column3-Body1">No output except for errors.</td>
                </tr>
                <tr class="Body-Body1">
                    <td style="font-family: monospace;" class="BodyE-Column1-Body1">hostname</td>
                    <td style="font-family: monospace;" class="BodyE-Column2-Body1">char *</td>
                    <td class="BodyD-Column3-Body1">Name of the TFS to connect to and store the resulting database</td>
                </tr>
                <tr class="Body-Body1">
                    <td style="font-family: monospace;" class="BodyE-Column1-Body1">masterTFS</td>
                    <td style="font-family: monospace;" class="BodyE-Column2-Body1">char *</td>
                    <td class="BodyD-Column3-Body1">Name of the master TFS (to place DBD in a subdirectory)</td>
                </tr>
                <tr class="Body-Body1">
                    <td style="font-family: monospace;" class="BodyE-Column1-Body1">name_space</td>
                    <td style="font-family: monospace;" class="BodyE-Column2-Body1">char *</td>
                    <td class="BodyD-Column3-Body1">Name space value to prepend to the database name when creating the DBD</td>
                </tr>
                <tr class="Body-Body1">
                    <td style="font-family: monospace;" class="BodyE-Column1-Body1">stdout_file</td>
                    <td style="font-family: monospace;" class="BodyE-Column2-Body1">const char *</td>
                    <td class="BodyD-Column3-Body1">This specifies the name of the file to which output data will be written. If set to PSP_STDOUT, stdout is used. If set to NULL or to an empty string, no output will be generated.</td>
                </tr>
                <tr class="Body-Body1">
                    <td style="font-family: monospace;" class="BodyE-Column1-Body1">stderr_file</td>
                    <td style="font-family: monospace;" class="BodyE-Column2-Body1">const char *</td>
                    <td class="BodyD-Column3-Body1">This specifies the name of the file to which error data will be written. If set to PSP_STDERR, stderr is used. If set to NULL or to an empty string, no error information will be generated.</td>
                </tr>
                <tr class="Body-Body1">
                    <td style="font-family: monospace;" class="BodyE-Column1-Body1">include_path</td>
                    <td style="font-family: monospace;" class="BodyE-Column2-Body1">char *</td>
                    <td class="BodyD-Column3-Body1">Additional include path locations for the pre-processor</td>
                </tr>
                <tr class="Body-Body1">
                    <td style="font-family: monospace;" class="BodyE-Column1-Body1">ddlfile</td>
                    <td style="font-family: monospace;" class="BodyE-Column2-Body1">char *</td>
                    <td class="BodyD-Column3-Body1">Name of the ddl file to process</td>
                </tr>
                <tr class="Body-Body1">
                    <td style="font-family: monospace;" class="BodyE-Column1-Body1">cpp_flag</td>
                    <td style="font-family: monospace;" class="BodyE-Column2-Body1">int8_t</td>
                    <td class="BodyD-Column3-Body1">Generate C++ interface files</td>
                </tr>
                <tr class="Body-Body1">
                    <td style="font-family: monospace;" class="BodyE-Column1-Body1">carray_flag</td>
                    <td style="font-family: monospace;" class="BodyE-Column2-Body1">int8_t</td>
                    <td class="BodyD-Column3-Body1">Generate a C array containing DBD information</td>
                </tr>
                <tr class="Body-Body1">
                    <td style="font-family: monospace;" class="BodyE-Column1-Body1">no_dbd_flag</td>
                    <td style="font-family: monospace;" class="BodyE-Column2-Body1">int8_t</td>
                    <td class="BodyD-Column3-Body1">Don't generate a .dbd file</td>
                </tr>
                <tr class="Body-Body1">
                    <td style="font-family: monospace;" class="BodyE-Column1-Body1">use_dba4</td>
                    <td style="font-family: monospace;" class="BodyE-Column2-Body1">uint16_t</td>
                    <td class="BodyD-Column3-Body1">Use compact (4-byte) database addresses</td>
                </tr>
                <tr class="Body-Body1">
                    <td style="font-family: monospace;" class="BodyE-Column1-Body1">d_flag</td>
                    <td style="font-family: monospace;" class="BodyE-Column2-Body1">uint16_t</td>
                    <td class="BodyD-Column3-Body1">Allow duplicate field names</td>
                </tr>
                <tr class="Body-Body1">
                    <td style="font-family: monospace;" class="BodyE-Column1-Body1">e_flag</td>
                    <td style="font-family: monospace;" class="BodyE-Column2-Body1">int32_t</td>
                    <td class="BodyD-Column3-Body1">Generate embed code</td>
                </tr>
                <tr class="Body-Body1">
                    <td style="font-family: monospace;" class="BodyE-Column1-Body1">i_flag</td>
                    <td style="font-family: monospace;" class="BodyE-Column2-Body1">int32_t</td>
                    <td class="BodyD-Column3-Body1">Include path for compiler pre-processor</td>
                </tr>
                <tr class="Body-Body1">
                    <td style="font-family: monospace;" class="BodyE-Column1-Body1">pp_flag</td>
                    <td style="font-family: monospace;" class="BodyE-Column2-Body1">int32_t</td>
                    <td class="BodyD-Column3-Body1">Use preprocessor before compiling ddl specification</td>
                </tr>
                <tr class="Body-Body1">
                    <td style="font-family: monospace;" class="BodyE-Column1-Body1">nh_flag</td>
                    <td style="font-family: monospace;" class="BodyE-Column2-Body1">int32_t</td>
                    <td class="BodyD-Column3-Body1">Don't generate the database header file</td>
                </tr>
                <tr class="Body-Body1">
                    <td style="font-family: monospace;" class="BodyE-Column1-Body1">m_flag</td>
                    <td style="font-family: monospace;" class="BodyE-Column2-Body1">int32_t</td>
                    <td class="BodyD-Column3-Body1">Display database memory requirements</td>
                </tr>
                <tr class="Body-Body1">
                    <td style="font-family: monospace;" class="BodyE-Column1-Body1">r_flag</td>
                    <td style="font-family: monospace;" class="BodyE-Column2-Body1">int32_t</td>
                    <td class="BodyD-Column3-Body1">Display database report</td>
                </tr>
                <tr class="Body-Body1">
                    <td style="font-family: monospace;" class="BodyE-Column1-Body1">s_flag</td>
                    <td style="font-family: monospace;" class="BodyE-Column2-Body1">int32_t</td>
                    <td class="BodyD-Column3-Body1">Case sensitivity</td>
                </tr>
                <tr class="Body-Body1">
                    <td style="font-family: monospace;" class="BodyE-Column1-Body1">x_flag</td>
                    <td style="font-family: monospace;" class="BodyE-Column2-Body1">int32_t</td>
                    <td class="BodyD-Column3-Body1">Display identifier cross reference</td>
                </tr>
                <tr class="Body-Body1">
                    <td style="font-family: monospace;" class="BodyE-Column1-Body1">z_flag</td>
                    <td style="font-family: monospace;" class="BodyE-Column2-Body1">int32_t</td>
                    <td class="BodyD-Column3-Body1">Don't include SIZEOF constants in database header</td>
                </tr>
                <tr class="Body-Body1">
                    <td style="font-family: monospace;" class="BodyB-Column1-Body1">fmode</td>
                    <td style="font-family: monospace;" class="BodyB-Column2-Body1">PSP_FILE_MODE</td>
                    <td class="BodyA-Column3-Body1">Use UTF-8 or UTF-16 mode for files</td>
                </tr>
            </tbody>
        </table>
        <p class="Heading">Currency Changes</p>
        <p>Currency is not affected by this API</p>
        <p class="Heading">Locking Requirements</p>
        <p>There are no locking requirements for this API</p>
        <p class="Heading">Required Headers</p><pre xml:space="preserve">#include "dutilproto.h"</pre>
        <p class="Heading">Libraries</p>
        <table style="width: 100%; margin-left: 0; margin-right: auto;">
            <col style="width: 200px;" />
            <col />
            <thead>
                <tr>
                    <th>Library Name</th>
                    <th>Description</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td><code>rdmddl<span class="MyVariablesLibraryVersion">11</span></code>
                    </td>
                    <td><span class="MyVariablesProductShortName">RDM</span> database definition library</td>
                </tr>
            </tbody>
        </table>
        <p>See <a href="../../GS/distrib.htm#Library">Library Naming Conventions</a> section for full library name and a list of library dependencies.</p>
        <p class="Heading">Return Codes</p>
        <table class="TableStyle-CoreErrCodes" cellspacing="0" style="mc-table-style: url('../../Resources/TableStyles/CoreErrCodes.css');">
            <col class="Column-Column1" />
            <col class="Column-Column2" />
            <col class="Column-Column3" />
            <thead>
                <tr class="Head-Header1">
                    <th class="HeadE-Column1-Header1">Value</th>
                    <th class="HeadE-Column2-Header1">Name</th>
                    <th class="HeadD-Column3-Header1">Description</th>
                </tr>
            </thead>
            <tbody>
                <tr class="Body-Body1">
                    <td class="BodyB-Column1-Body1">0</td>
                    <td class="BodyB-Column2-Body1">S_OKAY</td>
                    <td class="BodyA-Column3-Body1">normal return, okay</td>
                </tr>
            </tbody>
        </table>
        <table class="TableStyle-CoreErrCodes" cellspacing="0" style="mc-table-style: url('../../Resources/TableStyles/CoreErrCodes.css');">
            <col class="Column-Column1" />
            <col class="Column-Column2" />
            <col class="Column-Column3" />
            <tbody>
                <tr class="Body-Body1">
                    <td class="BodyB-Column1-Body1">-68</td>
                    <td class="BodyB-Column2-Body1">S_DDLERROR</td>
                    <td class="BodyA-Column3-Body1">There were errors processing a DDL file</td>
                </tr>
            </tbody>
        </table>
        <table class="TableStyle-CoreErrCodes" cellspacing="0" style="mc-table-style: url('../../Resources/TableStyles/CoreErrCodes.css');">
            <col class="Column-Column1" />
            <col class="Column-Column2" />
            <col class="Column-Column3" />
            <tbody>
                <tr class="Body-Body1">
                    <td class="BodyB-Column1-Body1">-904</td>
                    <td class="BodyB-Column2-Body1">S_NOMEMORY</td>
                    <td class="BodyA-Column3-Body1">out of memory</td>
                </tr>
            </tbody>
        </table>
        <table class="TableStyle-CoreErrCodes" cellspacing="0" style="mc-table-style: url('../../Resources/TableStyles/CoreErrCodes.css');">
            <col class="Column-Column1" />
            <col class="Column-Column2" />
            <col class="Column-Column3" />
            <tbody>
                <tr class="Body-Body1">
                    <td class="BodyB-Column1-Body1">-905</td>
                    <td class="BodyB-Column2-Body1">S_NOFILE</td>
                    <td class="BodyA-Column3-Body1">error opening data or key file</td>
                </tr>
            </tbody>
        </table>
        <p class="Heading">See Also</p>
        <p><a href="../../util/ddlp.htm">ddlp utility</a>
        </p>
        <p class="Heading">Example</p><pre xml:space="preserve">int32_t ddlpExample_main(
    int32_t            argc,
    const char *const *argv)
{
    char              *ddlfile = "tims.ddl";
    DDLP_PARAMS        params;
    DDLP_LOCAL_PARAMS  local_params;
    int32_t            num_errors;
    int32_t            num_warnings;
    int32_t            status;
    TFS_HANDLE         hTFS;

    memset(&amp;params, 0, sizeof(DDLP_PARAMS));
    memset(&amp;local_params, 0, sizeof(DDLP_LOCAL_PARAMS));

    /* Process command line options */
    status = get_options(argc, argv, &amp;local_params, &amp;params);
    if (status == B_CMD_OKAY)
    {
        /* We may need to initialize the TFS */
        status = d_tfsinit(local_params.docroot ? local_params.docroot : "", NULL, &amp;hTFS);
        if(status == S_OKAY)
        {                    
            if ((status = d_ddlp(&amp;params, &amp;num_errors, &amp;num_warnings)) != S_OKAY)
            {
                psp_log_err("Error: %d calling d_ddlp\n", status);
            }
            d_tfsterm(hTFS);
        }
        else
        {
            psp_log_err("Error %d initializing the TFS\n", status);
        }
    }
    cleanup_params(&amp;params, &amp;local_params);
    
    return status == S_OKAY ? 0 : 1;
}
</pre>
        <hr MadCap:conditions="Default.ScreenOnly" width="100%" size="0" align="center" />
        <p MadCap:conditions="Default.ScreenOnly" style="font-size: 8pt;"><span class="MyVariablesCopyright">Copyright © 2012, Raima Inc. All rights reserved.</span>
        </p>
        <script type="text/javascript" src="../../SkinSupport/MadCapBodyEnd.js">
        </script>
        <p class="MCWebHelpFramesetLink MCWebHelpFramesetLinkBottom" style="display: none;"><a href="../../../Default_CSH.htm#RM/utilapi/d_ddlp.htm" style="">Open topic with navigation</a>
        </p>
    </body>
</html>