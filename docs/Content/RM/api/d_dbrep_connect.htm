<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:tocPath="Replication and Mirroring Guide|API Functions" MadCap:InPreviewMode="false" MadCap:PreloadImages="false" MadCap:RuntimeFileType="Topic" MadCap:TargetType="WebHelp" lang="en-us" xml:lang="en-us" MadCap:PathToHelpSystem="../../../" MadCap:HelpSystemFileName="Default.xml" MadCap:SearchType="Stem">
    <head>
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>d_dbrep_connect</title>
        <link rel="icon" type="image/png" href="http://docs.raima.com/favicon.png" />
        <link href="../../SkinSupport/MadCap.css" rel="stylesheet" />
        <link href="../../Resources/TableStyles/ParamStruct.css" rel="stylesheet" />
        <link href="../../Resources/TableStyles/FunctionArgs.css" rel="stylesheet" />
        <link href="../../Resources/TableStyles/CoreErrCodes.css" rel="stylesheet" />
        <link href="../../Resources/Stylesheets/raima.css" rel="stylesheet" />
        <script src="../../SkinSupport/MadCapAll.js" type="text/javascript">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink MCWebHelpFramesetLinkTop" style="display: none;"><a href="../../../Default_CSH.htm#RM/api/d_dbrep_connect.htm" style="">Open topic with navigation</a>
        </p>
        <div class="MCBreadcrumbsBox_0"><span class="MCBreadcrumbsPrefix">You are here: </span><a class="MCBreadcrumbsLink" href="../../dbDataFlow.htm">Replication and Mirroring Guide</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="../../DFUG/DFAPIReference.htm">API Functions</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">d_dbrep_connect</span>
        </div>
        <h3 class="newpage"><a name="kanchor431"></a>d_dbrep_connect</h3>
        <p>Begin mirroring or replicating a database</p>
        <p class="Heading">Prototype</p><pre xml:space="preserve">int32_t <b>d_dbrep_connect</b>(
    const DBREP_CONNECT_PARMS *<i>params</i>,
    uint16_t                  *<i>slaveId</i>);</pre><pre xml:space="preserve">int32_t <b>d_dbrep_connectW</b>(
    const DBREP_CONNECT_PARMSW *<i>params</i>,    /* structure with UNICODE strings */
    uint16_t                   *<i>slaveId</i>);</pre>
        <p class="Heading">Parameters</p>
        <table style="width: 100%;mc-table-style: url('../../Resources/TableStyles/FunctionArgs.css');margin-left: 0;margin-right: auto;" class="TableStyle-FunctionArgs" cellspacing="0">
            <col style="width: 140px;" class="Column-Column1" />
            <col style="width: 80px;" class="Column-Column3" />
            <col class="Column-Column2" />
            <tbody>
                <tr class="Body-Body1">
                    <td class="BodyE-Column1-Body1">params</td>
                    <td class="BodyE-Column3-Body1">(input)</td>
                    <td class="BodyD-Column2-Body1">A pointer to a DBREP_CONNECT_PARAMS structure.</td>
                </tr>
                <tr class="Body-Body1">
                    <td class="BodyB-Column1-Body1">slaveId</td>
                    <td class="BodyB-Column3-Body1">(output)</td>
                    <td class="BodyA-Column2-Body1">Sequence number of the Replication utility's activity.</td>
                </tr>
            </tbody>
        </table>
        <p class="Heading">Description</p>
        <p>This function performs the action of <code>dbget -b</code>, requesting a slave Replication utility (<code>dbmirror</code>, <code>dbrep</code>, <code>dbrepsql</code>) to begin a mirroring or replication connection with a master Replication utility. To end the connection, the corresponding function <code>d_dbrep_disconnect</code> is called.</p>
        <table style="width: 100%;border-collapse: collapse;border-left-style: solid;border-left-width: 1px;border-left-color: #c0c0c0;border-right-style: solid;border-right-width: 1px;border-right-color: #c0c0c0;border-top-style: solid;border-top-width: 1px;border-top-color: #c0c0c0;border-bottom-style: solid;border-bottom-width: 1px;border-bottom-color: #c0c0c0;margin-left: 0;margin-right: auto;mc-table-style: url('../../Resources/TableStyles/ParamStruct.css');" class="TableStyle-ParamStruct" cellspacing="0">
            <caption>DBREP_CONNECT_PARAMS structure definition</caption>
            <col style="width: 180px;" class="Column-Column1" />
            <col style="width: 140px;" class="Column-Column2" />
            <col class="Column-Column3" />
            <thead>
                <tr class="Head-Header1">
                    <th class="HeadE-Column1-Header1">Element</th>
                    <th class="HeadE-Column2-Header1">Declaration</th>
                    <th class="HeadD-Column3-Header1">Description</th>
                </tr>
            </thead>
            <tbody>
                <tr class="Body-Body1">
                    <td style="font-family: monospace;" class="BodyE-Column1-Body1">quiet</td>
                    <td style="font-family: monospace;" class="BodyE-Column2-Body1">DB_BOOLEAN</td>
                    <td class="BodyD-Column3-Body1">No output except for errors.</td>
                </tr>
                <tr class="Body-Body1">
                    <td style="font-family: monospace;" class="BodyE-Column1-Body1">dburl</td>
                    <td style="font-family: monospace;" class="BodyE-Column2-Body1">const char/wchar_t *</td>
                    <td class="BodyD-Column3-Body1">Fully qualified database name:&#160;<code>name[@tfsdomain[:port]]</code></td>
                </tr>
                <tr class="Body-Body1">
                    <td style="font-family: monospace;" class="BodyE-Column1-Body1">dbuserid</td>
                    <td style="font-family: monospace;" class="BodyE-Column2-Body1">const char/wchar_t *</td>
                    <td class="BodyD-Column3-Body1">UserID to use when logging in (default:&#160;NULL).</td>
                </tr>
                <tr class="Body-Body1">
                    <td style="font-family: monospace;" class="BodyE-Column1-Body1">hostname</td>
                    <td style="font-family: monospace;" class="BodyE-Column2-Body1">const char/wchar_t *</td>
                    <td class="BodyD-Column3-Body1">The TFS&#160;domain name for the slave database. Used with <code>port</code>.</td>
                </tr>
                <tr class="Body-Body1">
                    <td style="font-family: monospace;" class="BodyE-Column1-Body1">dsn</td>
                    <td style="font-family: monospace;" class="BodyE-Column2-Body1">const char/wchar_t *</td>
                    <td class="BodyD-Column3-Body1">dbrepsql data source name:&#160;dsn;user;pswd</td>
                </tr>
                <tr class="Body-Body1">
                    <td style="font-family: monospace;" class="BodyE-Column1-Body1">synchronize</td>
                    <td style="font-family: monospace;" class="BodyE-Column2-Body1">int16_t</td>
                    <td class="BodyD-Column3-Body1">1 to begin persistent synchronous replication, -1 to end synchronous replication.</td>
                </tr>
                <tr class="Body-Body1">
                    <td style="font-family: monospace;" class="BodyE-Column1-Body1">port</td>
                    <td style="font-family: monospace;" class="BodyE-Column2-Body1">uint16_t</td>
                    <td class="BodyD-Column3-Body1">TFS&#160;anchor port. Should match TFS <code>-p port</code> number of slave (use <span style="mc-tag-and-class: code;" class="MyVariablesDefaultPort">21553</span> if default). Used with <code>hostname</code>.</td>
                </tr>
                <tr class="Body-Body1">
                    <td style="font-family: monospace;" class="BodyE-Column1-Body1">sql_slave_type</td>
                    <td style="font-family: monospace;" class="BodyE-Column2-Body1">REP_SLAVE_TYPE</td>
                    <td class="BodyD-Column3-Body1">For <code>dbrepsql</code> only, the target slave server (<code>RST_RDMS, RST_ORACLE, RST_MSSQL, RST_MYSQL</code>).</td>
                </tr>
                <tr class="Body-Body1">
                    <td style="font-family: monospace;" class="BodyE-Column1-Body1">override_inmem</td>
                    <td style="font-family: monospace;" class="BodyE-Column2-Body1">uint16_t</td>
                    <td class="BodyD-Column3-Body1">Force slave database to disk if master database is in-memory.</td>
                </tr>
                <tr class="Body-Body1">
                    <td style="font-family: monospace;" class="BodyE-Column1-Body1">slave_done_notifier</td>
                    <td style="font-family: monospace;" class="BodyE-Column2-Body1">SLAVE_DONE_FCN</td>
                    <td class="BodyD-Column3-Body1">Callback function.  Called when the slave thread ends. See below.</td>
                </tr>
                <tr class="Body-Body1">
                    <td style="font-family: monospace;" class="BodyB-Column1-Body1">stdout_file</td>
                    <td style="font-family: monospace;" class="BodyB-Column2-Body1">const char/wchar_t *</td>
                    <td class="BodyA-Column3-Body1">This specifies the name of the file to which output data will be written. If set to PSP_STDOUT, stdout is used. If set to NULL or to an empty string, no output will be generated.</td>
                </tr>
            </tbody>
        </table>
        <p class="Heading">SLAVE_DONE_FCN Prototype</p><pre xml:space="preserve">void my_slave_done_fcn(
    int32_t    slave_return)</pre>
        <p class="Heading">SLAVE_DONE_FCN&#160;Parameters</p>
        <table style="width: 100%;mc-table-style: url('../../Resources/TableStyles/FunctionArgs.css');margin-left: 0;margin-right: auto;" class="TableStyle-FunctionArgs" cellspacing="0">
            <col style="width: 140px;" class="Column-Column1" />
            <col style="width: 80px;" class="Column-Column3" />
            <col class="Column-Column2" />
            <tbody>
                <tr class="Body-Body1">
                    <td class="BodyB-Column1-Body1">slave_return</td>
                    <td class="BodyB-Column3-Body1">(input)</td>
                    <td class="BodyA-Column2-Body1">Return code from slave thread.</td>
                </tr>
            </tbody>
        </table>
        <p class="Heading">SLAVE_DONE_FCN&#160;Description</p>
        <p>When <code>slave_done_notifier</code> is not NULL, it is a callback function.  The slave is started in dbmirror/dbrep/dbrepsql in a thread.  When the slave thread exits, either by success or failure, the function specified in <code>slave_done_notifier</code> is called with the return code from the slave thread, S_OKAY or some error code. The <code>slave_done_notifier</code> only needs to be specified if an application needs to know when a slave ends.  If you specify a callback function in <code>slave_done_notifier</code>, the value returned in <code>slaveId</code> will always be 0.</p>
        <p class="Heading">Reference Manual</p>
        <p><a href="../../util/dbrep.htm">Database Replication Utility</a>
        </p>
        <p><a href="../../util/dbget.htm">Database Get Utility</a>
        </p>
        <p class="Heading">Required Headers</p><pre xml:space="preserve">
#include "mirutils.h"</pre>
        <p class="Heading">Libraries</p>
        <table style="width: 100%; margin-left: 0; margin-right: auto;">
            <col style="width: 200px;">
            </col>
            <col>
            </col>
            <thead>
                <tr>
                    <th>Library Name</th>
                    <th>Description</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td><code>rdmdatamove<span class="MyVariablesLibraryVersion">11</span></code>
                    </td>
                    <td>Mirroring/Replication Control Functions Library</td>
                </tr>
            </tbody>
        </table>
        <p>See <a href="../../GS/distrib.htm#Library">Library Naming Conventions</a> section for full library name and a list of library dependencies.</p>
        <p class="Heading">Return Codes</p>
        <table class="TableStyle-CoreErrCodes" cellspacing="0" style="mc-table-style: url('../../Resources/TableStyles/CoreErrCodes.css');">
            <col class="Column-Column1" />
            <col class="Column-Column2" />
            <col class="Column-Column3" />
            <thead>
                <tr class="Head-Header1">
                    <th class="HeadE-Column1-Header1">Value</th>
                    <th class="HeadE-Column2-Header1">Name</th>
                    <th class="HeadD-Column3-Header1">Description</th>
                </tr>
            </thead>
            <tbody>
                <tr class="Body-Body1">
                    <td class="BodyB-Column1-Body1">0</td>
                    <td class="BodyB-Column2-Body1">S_OKAY</td>
                    <td class="BodyA-Column3-Body1">normal return, okay</td>
                </tr>
            </tbody>
        </table>
        <table class="TableStyle-CoreErrCodes" cellspacing="0" style="mc-table-style: url('../../Resources/TableStyles/CoreErrCodes.css');">
            <col class="Column-Column1" />
            <col class="Column-Column2" />
            <col class="Column-Column3" />
            <tbody>
                <tr class="Body-Body1">
                    <td class="BodyB-Column1-Body1">3</td>
                    <td class="BodyB-Column2-Body1">S_DUPLICATE</td>
                    <td class="BodyA-Column3-Body1">duplicate key</td>
                </tr>
            </tbody>
        </table>
        <table class="TableStyle-CoreErrCodes" cellspacing="0" style="mc-table-style: url('../../Resources/TableStyles/CoreErrCodes.css');">
            <col class="Column-Column1" />
            <col class="Column-Column2" />
            <col class="Column-Column3" />
            <tbody>
                <tr class="Body-Body1">
                    <td class="BodyB-Column1-Body1">-4</td>
                    <td class="BodyB-Column2-Body1">S_INVDB</td>
                    <td class="BodyA-Column3-Body1">cannot open dictionary</td>
                </tr>
            </tbody>
        </table>
        <table class="TableStyle-CoreErrCodes" cellspacing="0" style="mc-table-style: url('../../Resources/TableStyles/CoreErrCodes.css');">
            <col class="Column-Column1" />
            <col class="Column-Column2" />
            <col class="Column-Column3" />
            <tbody>
                <tr class="Body-Body1">
                    <td class="BodyB-Column1-Body1">-904</td>
                    <td class="BodyB-Column2-Body1">S_NOMEMORY</td>
                    <td class="BodyA-Column3-Body1">out of memory</td>
                </tr>
            </tbody>
        </table>
        <table class="TableStyle-CoreErrCodes" cellspacing="0" style="mc-table-style: url('../../Resources/TableStyles/CoreErrCodes.css');">
            <col class="Column-Column1" />
            <col class="Column-Column2" />
            <col class="Column-Column3" />
            <tbody>
                <tr class="Body-Body1">
                    <td class="BodyB-Column1-Body1">-924</td>
                    <td class="BodyB-Column2-Body1">S_INVNULL</td>
                    <td class="BodyA-Column3-Body1">invalid NULL parameter</td>
                </tr>
            </tbody>
        </table>
        <p class="Heading">See Also</p>
        <p><a href="d_dbrep_disconnect.htm">d_dbrep_disconnect</a>
        </p>
        <p><a href="d_dbrep_start.htm">d_dbrep_start</a>
        </p>
        <p><a href="d_dbrep_stop.htm">d_dbrep_stop</a>
        </p>
        <p><a href="d_dbrep_term.htm">d_dbrep_term</a>
        </p>
        <p class="Heading">Example</p><pre xml:space="preserve">#include "rdm.h"
#include "mirutils.h"

/* ------------------------------------------------------------------------
   Start mirroring or replicating a database
*/
int32_t start_rep_to_slave(
    const char *dbname_to_rep,
    const char *hostname,
    uint16_t    port,
    uint16_t   *slaveid_ptr)
{
    int32_t              stat;
    DBREP_CONNECT_PARAMS parms;

    memset(&amp;parms, 0, sizeof(DBREP_CONNECT_PARAMS));
    parms.quiet = 0;
    parms.dburl = dbname_to_rep;

    if (hostname)
        parms.hostname = hostname;
    else
        parms.hostname = RDM_LOCALHOST;

    if (port != 0)
        parms.port = port;
    else
        parms.port = 21553;

    parms.synchronize = 1;

    stat = d_dbrep_connect(&amp;parms, slaveid_ptr);
    return stat;
}

/* ------------------------------------------------------------------------
   Stop mirroring or replicating a database
*/
int32_t end_rep_to_slave(
    const char *dbname_to_rep,
    const char *hostname,
    uint16_t    port)
{
    int32_t                 stat;
    DBREP_DISCONNECT_PARAMS parms;

    memset(&amp;parms, 0, sizeof(DBREP_DISCONNECT_PARAMS));
    parms.quiet = 0;
    parms.dburl = dbname_to_rep;

    if (hostname)
        parms.hostname = hostname;
    else
        parms.hostname = RDM_LOCALHOST;

    if (port != 0)
        parms.port = port;
    else
        parms.port = 21553;

    stat = d_dbrep_disconnect(&amp;parms);
    return stat;
}

</pre>
        <hr MadCap:conditions="Default.ScreenOnly" width="100%" size="0" align="center" />
        <p MadCap:conditions="Default.ScreenOnly" style="font-size: 8pt;"><span class="MyVariablesCopyright">Copyright © 2012, Raima Inc. All rights reserved.</span>
        </p>
        <script type="text/javascript" src="../../SkinSupport/MadCapBodyEnd.js">
        </script>
        <p class="MCWebHelpFramesetLink MCWebHelpFramesetLinkBottom" style="display: none;"><a href="../../../Default_CSH.htm#RM/api/d_dbrep_connect.htm" style="">Open topic with navigation</a>
        </p>
    </body>
</html>