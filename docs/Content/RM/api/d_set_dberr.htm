<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:tocPath="Native API|Reference Manual|Core API Function Descriptions" MadCap:InPreviewMode="false" MadCap:PreloadImages="false" MadCap:RuntimeFileType="Topic" MadCap:TargetType="WebHelp" lang="en-us" xml:lang="en-us" MadCap:PathToHelpSystem="../../../" MadCap:HelpSystemFileName="Default.xml" MadCap:SearchType="Stem">
    <head>
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>d_set_dberr</title>
        <link rel="icon" type="image/png" href="http://docs.raima.com/favicon.png" />
        <link href="../../SkinSupport/MadCap.css" rel="stylesheet" />
        <link href="../../Resources/TableStyles/FunctionArgs.css" rel="stylesheet" />
        <link href="../../Resources/TableStyles/CoreErrCodes.css" rel="stylesheet" />
        <link href="../../Resources/Stylesheets/raima.css" rel="stylesheet" />
        <script src="../../SkinSupport/MadCapAll.js" type="text/javascript">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink MCWebHelpFramesetLinkTop" style="display: none;"><a href="../../../Default_CSH.htm#RM/api/d_set_dberr.htm" style="">Open topic with navigation</a>
        </p>
        <div class="MCBreadcrumbsBox_0"><span class="MCBreadcrumbsPrefix">You are here: </span><a class="MCBreadcrumbsLink" href="../../dbCore.htm">Native API</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="../dbRM.htm">Reference Manual</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="../Chapter33.htm">Core API Function Descriptions</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">d_set_dberr</span>
        </div>
        <h3 class="newpage"><a name="kanchor105"></a>d_set_dberr, d_set_dberrW, d_set_dberr_ex, d_set_dberr_exW</h3>
        <p>Replace default error reporting with user's function</p>
        <p class="Heading">Prototype</p><pre xml:space="preserve">int32_t <b>d_set_dberr</b>(
    ERRORPROC <i>errfunc</i>,
    DB_TASK  *<i>task</i>);</pre><pre xml:space="preserve">int32_t <b>d_set_dberrW</b>(
    ERRORPROCW <i>errfuncW</i>, /* callback with UNICODE string */
    DB_TASK   *<i>task</i>);</pre><pre xml:space="preserve">int32_t <b>d_set_dberr_ex</b>(
    ERRORPROC2 <i>errfunc2</i>,
    void      *<i>userdata</i>,
    DB_TASK   *<i>task</i>);</pre><pre xml:space="preserve">int32_t <b>d_set_dberr_exW</b>(
    ERRORPROC2W <i>errfunc2W</i>, /* callback with UNICODE string */
    void       *<i>userdata</i>,
    DB_TASK    *<i>task</i>);</pre>
        <p class="Heading">Parameters</p>
        <table style="width: 100%;mc-table-style: url('../../Resources/TableStyles/FunctionArgs.css');margin-left: 0;margin-right: auto;" class="TableStyle-FunctionArgs" cellspacing="0">
            <col style="width: 140px;" class="Column-Column1" />
            <col style="width: 80px;" class="Column-Column3" />
            <col class="Column-Column2" />
            <tbody>
                <tr class="Body-Body1">
                    <td class="BodyE-Column1-Body1">errorfunc</td>
                    <td class="BodyE-Column3-Body1">(input)</td>
                    <td class="BodyD-Column2-Body1">A function pointer to a user-defined error reporter.</td>
                </tr>
                <tr class="Body-Body1">
                    <td class="BodyB-Column1-Body1">userdata</td>
                    <td class="BodyB-Column3-Body1">(input)</td>
                    <td class="BodyA-Column2-Body1">A pointer to pass user specific data to your error function</td>
                </tr>
            </tbody>
        </table>
        <table style="width: 100%;mc-table-style: url('../../Resources/TableStyles/FunctionArgs.css');margin-left: 0;margin-right: auto;caption-side: top;" class="TableStyle-FunctionArgs" cellspacing="0">
            <col style="width: 140px;" class="Column-Column1" />
            <col style="width: 80px;" class="Column-Column3" />
            <col class="Column-Column2" />
            <tbody>
                <tr class="Body-Body1">
                    <td class="BodyB-Column1-Body1">task</td>
                    <td class="BodyB-Column3-Body1">(input)</td>
                    <td class="BodyA-Column2-Body1">A pointer to a <code>DB_TASK</code> structure.</td>
                </tr>
            </tbody>
        </table>
        <p class="Heading">Description</p>
        <p>This function accepts a pointer to a function that will be called when <span class="MyVariablesProductShortName">RDM</span> detects an error. The provided function supersedes the internal <code>dberr</code> function. The error reporting function must be a void function with the correct prototype, as shown below. In the function prototype, the integer is the error number as defined in <code>rdm.h</code>, and the character pointer points to the error message. If the extended form is used, then the task pointer and a void pointer will also be passed to the error reporting function. The void pointer is the same pointer which was passed to the <code>d_set_dberr_ex</code> function, allowing the error reporting function to retrieve more information if it is called.</p>
        <p>One error callback function is allowed per task.</p>
        <p>To receive the error message in UNICODE, use <code>d_set_dberrW</code>.</p>
        <p>The callback functions (the various ERRORPROC types) must be defined above the use of the <code>d_set_dberr*</code> function as follows:</p>
        <p><code style="font-size: 9pt;">void EXTERNAL_FCN MyErr(int32_t errnum, char *errmsg); /* ERRORPROC */</code>
        </p>
        <p><code style="font-size: 9pt;">void EXTERNAL_FCN MyErr(int32_t errnum, const char *errmsg, void *userdata, DB_TASK *task) /* ERRORPROC2 */</code>
        </p>
        <p>and the UNICODE counterparts:</p>
        <p><code style="font-size: 9pt;">void EXTERNAL_FCN MyErr(int32_t errnum, wchar_t *errmsg); /* ERRORPROCW */</code>
        </p>
        <p><code style="font-size: 9pt;">void EXTERNAL_FCN MyErr(int32_t errnum, const wchar_t *errmsg, void *userdata, DB_TASK *task) /* ERRORPROC2W */</code>
        </p>
        <p class="Heading">User's Guide</p>
        <p><a href="../../UG/Chapter5.htm#5.8">Database Error Reporting</a>
        </p>
        <p class="Heading">Currency Changes</p>
        <p>None.</p>
        <p class="Heading">Locking Requirements</p>
        <p>None.</p>
        <p class="Heading">Required Headers</p><pre xml:space="preserve">#include "rdm.h"</pre>
        <p class="Heading">Libraries</p>
        <table style="width: 100%; margin-left: 0; margin-right: auto;">
            <col style="width: 200px;">
            </col>
            <col>
            </col>
            <thead>
                <tr>
                    <th>Library Name</th>
                    <th>Description</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td><code>rdmrdm<span class="MyVariablesLibraryVersion">11</span></code>
                    </td>
                    <td><span class="MyVariablesProductShortName">RDM</span> Runtime Library</td>
                </tr>
            </tbody>
        </table>
        <p>See <a href="../../GS/distrib.htm#Library">Library Naming Conventions</a> section for full library name and a list of library dependencies.</p>
        <p class="Heading">Return Codes</p>
        <table class="TableStyle-CoreErrCodes" cellspacing="0" style="mc-table-style: url('../../Resources/TableStyles/CoreErrCodes.css');">
            <col class="Column-Column1" />
            <col class="Column-Column2" />
            <col class="Column-Column3" />
            <thead>
                <tr class="Head-Header1">
                    <th class="HeadE-Column1-Header1">Value</th>
                    <th class="HeadE-Column2-Header1">Name</th>
                    <th class="HeadD-Column3-Header1">Description</th>
                </tr>
            </thead>
            <tbody>
                <tr class="Body-Body1">
                    <td class="BodyB-Column1-Body1">0</td>
                    <td class="BodyB-Column2-Body1">S_OKAY</td>
                    <td class="BodyA-Column3-Body1">normal return, okay</td>
                </tr>
            </tbody>
        </table>
        <p class="Heading">See Also</p>
        <p><a href="d_opentask.htm">d_opentask</a>
        </p>
        <p><a href="d_dberr.htm">d_dberr</a>
        </p>
        <p class="Heading">Example</p><pre xml:space="preserve">#define "rdm.h"

void EXTERNAL_FCN my_dberr(int32_t, char *);
void EXTERNAL_FCN my_dberr_ex(int32_t, const char *, void *, DB_TASK&#160;*);
...
main()
{
    DB_TASK&#160;*task;
    DB_TASK&#160;*task_ex;
    char *prog_state = malloc(30);
    ...
    /* first task, use simple error reporting */
    d_opentask(&amp;task);
    d_set_dberr(my_dberr, task);
    d_open("tims", "s", task);
    ...
    /* second task, use extended error reporting */
    d_opentask(&amp;task_ex);
    strcpy(prog_state, "open");  /* will change as program progresses */
    d_set_dberr_ex(my_dberr_ex, (void *)prog_state, task_ex);
    d_open("sales", "s", task_ex);
}

void EXTERNAL_FCN my_dberr(int32_t err_no, char *err_msg)
{
    /* Special REPORTING of some error codes here */
    if ( err_no &lt;= -900 )
    {
        /* this is a safe method to tell RDM to release its resources */
        psp_term();
        exit(err_no);
    }
    else
    {
        /* You may choose to ignore some codes */
        if ( err_no == S_NOCM )
            return;
    }
    /* Report errors */
    ...
    return;
}

void EXTERNAL_FCN my_dberr_ex(
    int32_t     err_no,       /* error code&#160;*/
    const char *err_msg,      /* message corresponding to error code */
    void       *prog_state,   /* my own data */
    DB_TASK&#160;   *task)         /* task pointer */
{
    ....</pre>
        <hr MadCap:conditions="Default.ScreenOnly" width="100%" size="0" align="center" />
        <p MadCap:conditions="Default.ScreenOnly" style="font-size: 8pt;"><span class="MyVariablesCopyright">Copyright © 2012, Raima Inc. All rights reserved.</span>
        </p>
        <script type="text/javascript" src="../../SkinSupport/MadCapBodyEnd.js">
        </script>
        <p class="MCWebHelpFramesetLink MCWebHelpFramesetLinkBottom" style="display: none;"><a href="../../../Default_CSH.htm#RM/api/d_set_dberr.htm" style="">Open topic with navigation</a>
        </p>
    </body>
</html>