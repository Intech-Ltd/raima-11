<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:tocPath="Utility Programs" MadCap:InPreviewMode="false" MadCap:PreloadImages="false" MadCap:RuntimeFileType="Topic" MadCap:TargetType="WebHelp" lang="en-us" xml:lang="en-us" MadCap:PathToHelpSystem="../../" MadCap:HelpSystemFileName="Default.xml" MadCap:SearchType="Stem">
    <head>
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>dbimp</title>
        <link rel="icon" type="image/png" href="http://docs.raima.com/favicon.png" />
        <link href="../SkinSupport/MadCap.css" rel="stylesheet" />
        <link href="../Resources/TableStyles/ArgsTwoCol.css" rel="stylesheet" />
        <link href="../Resources/Stylesheets/raima.css" rel="stylesheet" />
        <script src="../SkinSupport/MadCapAll.js" type="text/javascript">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink MCWebHelpFramesetLinkTop" style="display: none;"><a href="../../Default_CSH.htm#util/dbimp.htm" style="">Open topic with navigation</a>
        </p>
        <div class="MCBreadcrumbsBox_0"><span class="MCBreadcrumbsPrefix">You are here: </span><a class="MCBreadcrumbsLink" href="../dbUTIL.htm">Utility Programs</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">dbimp</span>
        </div>
        <h3 class="newpage">dbimp</h3>
        <p>Database import utility.&#160; The database import utility is capable of importing data into an <span class="MyVariablesProductShortName">RDM</span> database from either ASCII text files or a single XML file.&#160; While this is one utility capable of working with either format, this section is broken into two parts for clarity, one dealing with the XML format, and the other dealing with the ASCII format.</p>
        <p class="Heading">Prototype</p><pre xml:space="preserve">dbimp [-h] [-B] [-V] [-q|[-stdout file]] [-stderr file] [-tfs type]
      [-docroot path] [-b N] [-k N] [-locale locale] [-p N] [-e esc]
      [-s sep] [-xml] [-o dbname] [-t] [-u] file
</pre>
        <p class="Heading">Common Options</p>
        <table style="caption-side: top;mc-table-style: url('../Resources/TableStyles/ArgsTwoCol.css');" class="TableStyle-ArgsTwoCol" cellspacing="0">
            <col class="Column-Column1" style="width: 200px;" />
            <col class="Column-Column2" />
            <tbody>
                <tr class="Body-Body1">
                    <td class="BodyE-Column1-Body1">-h</td>
                    <td class="BodyD-Column2-Body1">Display this usage information</td>
                </tr>
                <tr class="Body-Body1">
                    <td class="BodyE-Column1-Body1">-B</td>
                    <td class="BodyD-Column2-Body1">Do not display the banner</td>
                </tr>
                <tr class="Body-Body1">
                    <td class="BodyE-Column1-Body1">-V</td>
                    <td class="BodyD-Column2-Body1">Display the version information</td>
                </tr>
                <tr class="Body-Body1">
                    <td class="BodyE-Column1-Body1">-q</td>
                    <td class="BodyD-Column2-Body1">Quiet mode.  No information will be displayed</td>
                </tr>
                <tr class="Body-Body1">
                    <td class="BodyE-Column1-Body1">-stdout file</td>
                    <td class="BodyD-Column2-Body1">Redirect <code>stdout</code> to the specified file</td>
                </tr>
                <tr class="Body-Body1">
                    <td class="BodyE-Column1-Body1">-stderr file</td>
                    <td class="BodyD-Column2-Body1">Redirect <code>stderr</code> to the specified file</td>
                </tr>
                <tr class="Body-Body1" MadCap:conditions="CmdLine.TFS">
                    <td class="BodyB-Column1-Body1">-tfs TFS_TYPE</td>
                    <td class="BodyA-Column2-Body1">Specify the TFS type to use (TFST, TFSR, or TFSS) [default = TFST]</td>
                </tr>
            </tbody>
        </table>
        <table style="width: 100%;mc-table-style: url('../Resources/TableStyles/ArgsTwoCol.css');margin-left: 0;margin-right: auto;" class="TableStyle-ArgsTwoCol" cellspacing="0">
            <col class="Column-Column1" style="width: 200px;" />
            <col class="Column-Column2" />
            <tbody>
                <tr class="Body-Body1">
                    <td class="BodyE-Column1-Body1">-docroot <i>path</i></td>
                    <td class="BodyD-Column2-Body1">Document root for the TFS instance </td>
                </tr>
                <tr class="Body-Body1">
                    <td class="BodyE-Column1-Body1">-b <i>N</i></td>
                    <td class="BodyD-Column2-Body1">Adjust input buffer size to N kilobytes</td>
                </tr>
                <tr class="Body-Body1">
                    <td class="BodyE-Column1-Body1">-k <i>N</i></td>
                    <td class="BodyD-Column2-Body1">Changes the record index field length from the default of 25 bytes to n, where n is any number from 2 to 228. It is necessary to use longer lengths when input data is not unique up through 25 characters, and the find on, update on, or create on options are exercised. Shorter lengths may be specified to increase performance and decrease the size of a temporary file.</td>
                </tr>
                <tr class="Body-Body1">
                    <td class="BodyE-Column1-Body1">-locale</td>
                    <td class="BodyD-Column2-Body1">Specify a locale to use for collating string values</td>
                </tr>
                <tr class="Body-Body1">
                    <td class="BodyE-Column1-Body1">-p <i>N</i></td>
                    <td class="BodyD-Column2-Body1">Set the number of cache pages to N</td>
                </tr>
                <tr class="Body-Body1">
                    <td class="BodyB-Column1-Body1">-u</td>
                    <td class="BodyA-Column2-Body1">Use UTF-16 for all text files</td>
                </tr>
            </tbody>
        </table>
        <h4>XML</h4>
        <p class="Heading">Prototype</p><pre xml:space="preserve">dbimp [-xml] [-o dbname] [-t] [-u] file</pre>
        <p class="Heading">Description</p>
        <p>This utility imports data into an <span class="MyVariablesProductShortName">RDM</span> database from an XML file. The XML document must be in the format discussed in the <a href="../UG/Chapter10.htm#10.2">XML Import/Export</a> section of the <span class="MyVariablesProductShortName">RDM</span> Users Guide.</p>
        <p>This utility will require exclusive access to the database before it can open it for importing.</p>
        <p class="Heading">Options</p>
        <table style="width: 100%;mc-table-style: url('../Resources/TableStyles/ArgsTwoCol.css');margin-left: 0;margin-right: auto;" class="TableStyle-ArgsTwoCol" cellspacing="0">
            <col class="Column-Column1" />
            <col class="Column-Column2" />
            <tbody>
                <tr class="Body-Body1">
                    <td class="BodyE-Column1-Body1">-xml</td>
                    <td class="BodyD-Column2-Body1">Causes 'file' to be parsed as an XML import file</td>
                </tr>
                <tr class="Body-Body1">
                    <td class="BodyE-Column1-Body1">-o <i>dbname</i></td>
                    <td class="BodyD-Column2-Body1">dbname opened as output database (XML&#160;only)</td>
                </tr>
                <tr class="Body-Body1">
                    <td class="BodyB-Column1-Body1">-t</td>
                    <td class="BodyA-Column2-Body1">Causes file to be tested for well-formedness (XML&#160;only)</td>
                </tr>
            </tbody>
        </table>
        <h4>ASCII</h4>
        <p class="Heading">Prototype</p><pre xml:space="preserve">dbimp [-e esc] [-s sep] file</pre>
        <p class="Heading">Description</p>
        <p>This utility imports data into an <span class="MyVariablesProductShortName">RDM</span> database from ASCII text files according to commands contained in an import specification file, <code>file</code>. Refer to the <a href="../UG/Chapter10.htm#10.3">ASCII Import/Export</a> section  for complete information. See the <code>tims</code> example for a sample use case.</p>
        <p>The <b>dbimp </b>error message format is:</p><pre>filename line col : message</pre>
        <p>which is interpreted by some text editors.</p>
        <p>Limitations on the ASCII input file are as follows:</p>
        <ul style="list-style-type: square;margin-left: 36pt;">
            <li style="list-style-type: disc;" value="1">Maximum line length = 4300 bytes</li>
            <li style="list-style-type: disc;" value="2">Maximum field length = 1024 bytes</li>
            <li style="list-style-type: disc;" value="3">Maximum fields per line = 128</li>
        </ul>
        <p class="Heading">Options</p>
        <table style="width: 100%;mc-table-style: url('../Resources/TableStyles/ArgsTwoCol.css');margin-left: 0;margin-right: auto;" class="TableStyle-ArgsTwoCol" cellspacing="0">
            <col class="Column-Column1" />
            <col class="Column-Column2" />
            <tbody>
                <tr class="Body-Body1">
                    <td class="BodyE-Column1-Body1">-e <i>esc</i></td>
                    <td class="BodyD-Column2-Body1">Use 'esc' as escape character rather than '\'.</td>
                </tr>
                <tr class="Body-Body1">
                    <td class="BodyB-Column1-Body1">-s <i>sep</i></td>
                    <td class="BodyA-Column2-Body1">Use 'sep' as a field separator rather than ','.</td>
                </tr>
            </tbody>
        </table>
        <h4>Language Summary</h4>
        <p class="Heading">Import Specification</p><pre xml:space="preserve">database dbname;
   	for_loop
   	...
end;


for_loop:
   	foreach input_file {
      		import_statement
      ...
   }


import_statement:
   	for_loop | record_statement | connect_statement


record_statement:
   	record recname {
      		[ handling; ]
      		[ field_statement; ]
      		...
   }


handling:
   	create on fldnum |
   	update on fldnum |
   	find on fldnum


field_statement:
   	field fldname = [input_file.]fldnum 


connect_statement:
   	connect setname
</pre>
        <p>where the language elements are defined as follows:</p>
        <table style="width: 100%;mc-table-style: url('../Resources/TableStyles/ArgsTwoCol.css');margin-left: 0;margin-right: auto;" class="TableStyle-ArgsTwoCol" cellspacing="0">
            <col class="Column-Column1" style="width: 160px;" />
            <col class="Column-Column2" />
            <tbody>
                <tr class="Body-Body1">
                    <td class="BodyE-Column1-Body1">dbname</td>
                    <td class="BodyD-Column2-Body1">The full name of the database that is the target of the import. A path cannot be specified in the statement.</td>
                </tr>
                <tr class="Body-Body1">
                    <td class="BodyE-Column1-Body1">input_file</td>
                    <td class="BodyD-Column2-Body1">The full name, optionally including a full path, of an ASCII text file to be used as input. The name of the file must be enclosed in double-quotes (" "). Note that one input file may be opened more than once during an import.</td>
                </tr>
                <tr class="Body-Body1">
                    <td class="BodyE-Column1-Body1">recname</td>
                    <td class="BodyD-Column2-Body1">An <span class="MyVariablesProductShortName">RDM</span> record type that is defined in database dbname.</td>
                </tr>
                <tr class="Body-Body1">
                    <td class="BodyE-Column1-Body1">fldnum</td>
                    <td class="BodyD-Column2-Body1">An integer that identifies a field within input_file. The first input field is number 1, the second is 2, etc.</td>
                </tr>
                <tr class="Body-Body1">
                    <td class="BodyE-Column1-Body1">fldname</td>
                    <td class="BodyD-Column2-Body1">An <span class="MyVariablesProductShortName">RDM</span> field type that is defined in database dbname, within the record type created by the record_statement enclosing this statement.</td>
                </tr>
                <tr class="Body-Body1">
                    <td class="BodyB-Column1-Body1">setname</td>
                    <td class="BodyA-Column2-Body1">An <span class="MyVariablesProductShortName">RDM</span> set type that is defined in database dbname.</td>
                </tr>
            </tbody>
        </table>
        <hr MadCap:conditions="Default.ScreenOnly" width="100%" size="0" align="center" />
        <p MadCap:conditions="Default.ScreenOnly" style="font-size: 8pt;"><span class="MyVariablesCopyright">Copyright © 2012, Raima Inc. All rights reserved.</span>
        </p>
        <script type="text/javascript" src="../SkinSupport/MadCapBodyEnd.js">
        </script>
        <p class="MCWebHelpFramesetLink MCWebHelpFramesetLinkBottom" style="display: none;"><a href="../../Default_CSH.htm#util/dbimp.htm" style="">Open topic with navigation</a>
        </p>
    </body>
</html>