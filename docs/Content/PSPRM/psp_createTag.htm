<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:tocPath="Native API|Reference Manual|Platform Support Functions (psp_ Prefix)" MadCap:InPreviewMode="false" MadCap:PreloadImages="false" MadCap:RuntimeFileType="Topic" MadCap:TargetType="WebHelp" lang="en-us" xml:lang="en-us" class="" MadCap:PathToHelpSystem="../../" MadCap:HelpSystemFileName="Default.xml" MadCap:SearchType="Stem">
    <head>
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>psp_createTag</title>
        <link rel="icon" type="image/png" href="http://docs.raima.com/favicon.png" />
        <link href="../SkinSupport/MadCap.css" rel="stylesheet" />
        <link href="../Resources/TableStyles/FunctionArgs.css" rel="stylesheet" />
        <link href="../Resources/Stylesheets/raima.css" rel="stylesheet" />
        <script src="../SkinSupport/MadCapAll.js" type="text/javascript">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink MCWebHelpFramesetLinkTop" style="display: none;"><a href="../../Default_CSH.htm#PSPRM/psp_createTag.htm" style="">Open topic with navigation</a>
        </p>
        <div class="MCBreadcrumbsBox_0"><span class="MCBreadcrumbsPrefix">You are here: </span><a class="MCBreadcrumbsLink" href="../dbCore.htm">Native API</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="../RM/dbRM.htm">Reference Manual</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="../RM/Chapter5.htm">Platform Support Functions (psp_ Prefix)</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">psp_createTag</span>
        </div>
        <h3 class="newpage"><a name="kanchor151"></a>psp_createTag</h3>
        <p>Create a dynamic memory tag</p>
        <p class="Heading">Prototype</p><pre xml:space="preserve">PSP_MEMTAG psp_createTag(
&#160;&#160;&#160;&#160;const jmp_buf  errloc,
&#160;&#160;&#160;&#160;int16_t        flags);</pre>
        <p class="Heading">Parameters</p>
        <table style="width: 100%;mc-table-style: url('../Resources/TableStyles/FunctionArgs.css');margin-left: 0;margin-right: auto;" class="TableStyle-FunctionArgs" cellspacing="0">
            <col style="width: 140px;" class="Column-Column1" />
            <col style="width: 80px;" class="Column-Column3" />
            <col class="Column-Column2" />
            <tbody>
                <tr class="Body-Body1">
                    <td style="" class="BodyE-Column1-Body1">errloc</td>
                    <td style="" class="BodyE-Column3-Body1">(input)</td>
                    <td style="" class="BodyD-Column2-Body1">The jump buffer for an out-of-memory handler.</td>
                </tr>
                <tr class="Body-Body1">
                    <td class="BodyB-Column1-Body1">flags</td>
                    <td class="BodyB-Column3-Body1">(input)</td>
                    <td class="BodyA-Column2-Body1">The serialized (one at a time)&#160;allocation flag. If threads are allowed to allocate and free memory at the same time, you must specify PSP_TAG_USESEM to provide mutual exclusion; otherwise, you may specify PSP_TAG_NOSEM.</td>
                </tr>
            </tbody>
        </table>
        <p class="Heading">Description</p>
        <p>This function creates a dynamic memory allocation flag. Use of tagged memory allows you to specify different handling characteristics for classes of dynamic memory. A single call to <code>psp_freeTagMemory</code> can quickly and efficiently free all memory allocated on a given tag. This feature reduces the risk of memory leaks.</p>
        <p>The <code>errloc</code> parameter is the value of a C jump buffer, which you establish by calling <code>setjmp</code>.  Control will be passed to that location (via a call to <code>longjmp</code>) when there is not enough memory to satisfy an allocation request (for example, a call to <code>psp_getMemory</code>) on the tag.  An <code>errloc</code> value of NULL indicates that NULL will be returned by memory allocation functions when there is insufficient memory.
</p>
        <p>The <code>flags</code> value must be either PSP_TAG_USESEM or PSP_TAG_NOSEM.  This flag controls whether memory allocations and deallocations are serialized using a mutex semaphore.  If all allocations and deallocations will be from a single thread (or are already serialized through an outside method), specifying PSP_TAG_NOSEM will improve performance.  If allocations and deallocations can occur simultaneously from multiple threads, you must specify PSP_TAG_USESEM.

</p>
        <p class="Heading">Required Headers</p><pre xml:space="preserve">#include "psp.h"</pre>
        <p class="Heading">Libraries</p>
        <table style="width: 100%; margin-left: 0; margin-right: auto;">
            <col style="width: 200px;">
            </col>
            <col>
            </col>
            <thead>
                <tr>
                    <th>Library Name</th>
                    <th>Description</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td><code>rdmpsp<span class="MyVariablesLibraryVersion">11</span></code>
                    </td>
                    <td>Platform Support Library</td>
                </tr>
            </tbody>
        </table>
        <p>See <a href="../GS/distrib.htm#Library">Library Naming Conventions</a> section for full library name and a list of library dependencies.</p>
        <p class="Heading">Return Codes</p>
        <p>Returns either the newly allocated tag or NULL_MEMTAG.</p>
        <p class="Heading">See Also</p>
        <p><a href="psp_freeMemory.htm">psp_freeMemory</a>
        </p>
        <p><a href="psp_freeTagMemory.htm">psp_freeTagMemory</a>
        </p>
        <p class="Heading">Example</p><pre xml:space="preserve">#include "psp.h"
    ...
jmp_buf  memjmp;
    ...
    if (setjmp(memjmp)) {
    &#160;&#160;&#160;&#160;/* free any previously allocated memory and return error */
&#160;&#160;&#160;&#160;    psp_freeTagMemory(tag, 0);
&#160;&#160;&#160;    &#160;return S_NOMEMORY;
    }
    ...
    tag = psp_createTag(memjmp, PSP_TAG_NOSEM);
    ..
</pre>
        <hr MadCap:conditions="Default.ScreenOnly" width="100%" size="0" align="center" />
        <p MadCap:conditions="Default.ScreenOnly" style="font-size: 8pt;"><span class="MyVariablesCopyright">Copyright Â© 2012, Raima Inc. All rights reserved.</span>
        </p>
        <script type="text/javascript" src="../SkinSupport/MadCapBodyEnd.js">
        </script>
        <p class="MCWebHelpFramesetLink MCWebHelpFramesetLinkBottom" style="display: none;"><a href="../../Default_CSH.htm#PSPRM/psp_createTag.htm" style="">Open topic with navigation</a>
        </p>
    </body>
</html>