<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:tocPath="Examples and Tutorials" MadCap:InPreviewMode="false" MadCap:PreloadImages="false" MadCap:RuntimeFileType="Topic" MadCap:TargetType="WebHelp" lang="en-us" xml:lang="en-us" class="" MadCap:PathToHelpSystem="../../../" MadCap:HelpSystemFileName="Default.xml" MadCap:SearchType="Stem">
    <head>
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>MARKET - Multi-User Stock Market Simulation</title>
        <link rel="icon" type="image/png" href="http://docs.raima.com/favicon.png" />
        <link href="../../SkinSupport/MadCap.css" rel="stylesheet" />
        <link href="../../Resources/TableStyles/ArgsTwoCol.css" rel="stylesheet" />
        <link href="../../Resources/Stylesheets/raima.css" rel="stylesheet" />
        <script src="../../SkinSupport/MadCapAll.js" type="text/javascript">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink MCWebHelpFramesetLinkTop" style="display: none;"><a href="../../../Default_CSH.htm#TUTORIAL/Examples/MARKETexample.htm" style="">Open topic with navigation</a>
        </p>
        <div class="MCBreadcrumbsBox_0"><span class="MCBreadcrumbsPrefix">You are here: </span><a class="MCBreadcrumbsLink" href="../Examples.htm">Examples and Tutorials</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">MARKET - Multi-User Stock Market Simulation</span>
        </div>
        <h2 MadCap:conditions="" class="newpage">MARKET - Multi-User Stock Market Simulation</h2>
        <p>This example shows proper multi-user programming techniques and measures transaction throughput for performance evaluation.</p>
        <p>This program simulates a stock market to some extent. The <span style="font-family: 'Courier New';">mkt</span> database contains records representing investors and stocks. Investors may buy and sell stocks, and it is possible to add to their available funds. Stocks are purchased and sold, and it is possible to add to a company's shares by capitalizing the stock. </p>
        <p>An interactive command prompt menu is provided for most operations, and there are some batch operations that can be initiated through command-line options, as defined below.</p>
        <h3>Execution</h3><pre xml:space="preserve">marketExample [-h] [-i filename] [-s filename] [-t N] [-f Y,D]</pre>
        <p class="Heading">Options</p>
        <table style="width: 100%;mc-table-style: url('../../Resources/TableStyles/ArgsTwoCol.css');margin-left: 0;margin-right: auto;" class="TableStyle-ArgsTwoCol" cellspacing="0">
            <col class="Column-Column1" />
            <col class="Column-Column2" />
            <tbody>
                <tr class="Body-Body1">
                    <td class="BodyE-Column1-Body1">-h </td>
                    <td class="BodyD-Column2-Body1">Display usage information.</td>
                </tr>
                <tr class="Body-Body1">
                    <td class="BodyE-Column1-Body1">-i filename</td>
                    <td class="BodyD-Column2-Body1">Import filename containing CSV&#160;investor data (name, funds)</td>
                </tr>
                <tr class="Body-Body1">
                    <td class="BodyE-Column1-Body1">-s filename</td>
                    <td class="BodyD-Column2-Body1">Import filename containing CSV&#160;company data (name, shares, price)</td>
                </tr>
                <tr class="Body-Body1">
                    <td class="BodyE-Column1-Body1">-t N</td>
                    <td class="BodyD-Column2-Body1">Simulate stock trading (N&#160;trades/day).</td>
                </tr>
                <tr class="Body-Body1">
                    <td class="BodyB-Column1-Body1">-f Y,D</td>
                    <td class="BodyA-Column2-Body1">Yearly growth percentage, Daily variance percentage</td>
                </tr>
            </tbody>
        </table>
        <p>
            <img src="../../Resources/Images/mkt-01.JPG" />
        </p>
        <p>There are two ways to initialize and add data to the database. Initialization may be done through the 'i' option shown above, or by using the <span style="font-family: 'Courier New';">initdb</span> utility, as shown below.</p>
        <p>Companies and investors can be added through the batch functions, or through the interactive options '1 - Create Company/Stock' and '2 - Create Investor' shown above.</p>
        <p>The batch initialization and load can be done as follows:</p><pre xml:space="preserve">initdb mkt
marketExample -i investors.txt
marketExample -s companies.txt</pre>
        <p>To create a company/stock, you select the option and answer the questions.</p>
        <p>
            <img src="../../Resources/Images/mkt-02.JPG" />
        </p>
        <p>When you fund an investor, the investor has more money to spend. When you capitalize a stock, the company has more shares to sell. The reports show a summary of all the transactions by the investor or stock.</p>
        <p>In a system where stock prices remain the same, there are no gains or losses. To make this simulation more interesting, the '9 - Market Fluctuation' is added (and also available in a batch form). Market fluctuation requests a percentage increase (or a negative number for decrease), but adds a random component to the fluctuation. The following graphic shows an average increase of 2.3% with a random variance up to 5%, meaning that most stocks go up (as much as 7.3%), or down (as much as 2.7%).</p>
        <p>
            <img src="../../Resources/Images/mkt-03.JPG" />
        </p>
        <h3>Multi-User Execution (TFSR&#160;Mode Only)</h3>
        <p>This example works with multiple users. As delivered, it assumes that the database resides on the same computer as the <span style="font-family: monospace;">marketExample</span> program, which is the default operation.</p>
        <p>The model for batch transactions is that there is an eight hour trading day. The simulation will let 1 second equal 1 hour, so each day's worth of trading will occur every 8 seconds. One instance of <span style="font-family: monospace;">marketExample</span> can be put into a continual trade cycle by using the '-t' command-line option. The number following -t is the number of trades per day, so <span style="font-family: monospace;">marketExample -t 16</span> represents two trades per hour, which will occur as two trades per second in this simulation.</p>
        <p>On Windows, you may want to start several instances so that the transaction throughput can be measured.</p>
        <p>
            <img src="../../Resources/Images/mkt-04.JPG" />
        </p>
        <p>In another command-prompt window, run <span style="font-family: monospace;">marketExample</span> in interactive mode (no command-line options) and select the 'x' option. This will zero out the transaction counter such that the next time 'x' is selected, a transaction rate for the period of time between the two 'x' options. Each subsequent 'x' will display a newly computed transaction rate. Longer periods of time will result in a better average rate.</p>
        <p>
            <img src="../../Resources/Images/mkt-05.JPG" />
        </p>
        <p>To simulate market fluctuation automatically while multi-user trading is occurring, you can use the batch form of fluctuation in another window as follows:</p><pre xml:space="preserve">marketExample -f Y,D</pre>
        <p>where Y is the annual increase (decrease) and D is the daily percentage of variation. The timing of the batch form is one change per day, which means every 8 seconds in real time. For example,</p><pre xml:space="preserve">marketExample -f 20,3</pre>
        <p>will cause fluctuation that averages a 20% growth over a year, with a variation per day of as much as 3% in the market value.</p>
        <h3>Making a Game Out of it</h3>
        <p>Since there are both manual and automatic trades, it is possible to initiate a group game, where real people are performing trades at the same time as the automatic fluctuation and other automatic traders. The "7 - Report on Investor" will show net increase or loss, so each player can see how any player is faring. Because the changes in stock values are completely random, there is no skill involved in the game.</p>
        <p>This would require multiple computers to be involved, assuming that each real player is using a Windows workstation. The database can be set up on someone's workstation, say Murphy's, and others can refer to that workstation when they start up:</p><pre xml:space="preserve">Murphy&gt; start tfserver -d c:\rdm\databases<br />Murphy&gt;&#160;initdb mkt<br />Murphy&gt; marketExample -i investors.txt<br />Murphy&gt; marketExample -s companies.txt<br />Murphy&gt; marketExample -f 25,5</pre>
        <p>Other workstations:</p><pre xml:space="preserve">Jones&gt; set TFSERVER=murphy<br />Jones&gt; marketExample</pre>
        <hr MadCap:conditions="Default.ScreenOnly" width="100%" size="0" align="center" />
        <p MadCap:conditions="Default.ScreenOnly" style="font-size: 8pt;"><span class="MyVariablesCopyright">Copyright Â© 2012, Raima Inc. All rights reserved.</span>
        </p>
        <script type="text/javascript" src="../../SkinSupport/MadCapBodyEnd.js">
        </script>
        <p class="MCWebHelpFramesetLink MCWebHelpFramesetLinkBottom" style="display: none;"><a href="../../../Default_CSH.htm#TUTORIAL/Examples/MARKETexample.htm" style="">Open topic with navigation</a>
        </p>
    </body>
</html>