<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:tocPath="Examples and Tutorials" MadCap:InPreviewMode="false" MadCap:PreloadImages="false" MadCap:RuntimeFileType="Topic" MadCap:TargetType="WebHelp" lang="en-us" xml:lang="en-us" class="" MadCap:PathToHelpSystem="../../../" MadCap:HelpSystemFileName="Default.xml" MadCap:SearchType="Stem">
    <head>
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>IOS - iOS Hello World Example</title>
        <link rel="icon" type="image/png" href="http://docs.raima.com/favicon.png" />
        <link href="../../SkinSupport/MadCap.css" rel="stylesheet" />
        <link href="../../Resources/Stylesheets/raima.css" rel="stylesheet" />
        <script src="../../SkinSupport/MadCapAll.js" type="text/javascript">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink MCWebHelpFramesetLinkTop" style="display: none;"><a href="../../../Default_CSH.htm#TUTORIAL/Examples/IOSexample.htm" style="">Open topic with navigation</a>
        </p>
        <div class="MCBreadcrumbsBox_0"><span class="MCBreadcrumbsPrefix">You are here: </span><a class="MCBreadcrumbsLink" href="../Examples.htm">Examples and Tutorials</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">IOS - iOS Hello World Example</span>
        </div>
        <h2 MadCap:conditions="" class="newpage">IOS - iOS Hello World Example</h2>
        <p>This example shows how to use <span class="MyVariablesProductShortName">RDM</span> from an Objective-C iOS project.</p>
        <p>This is an adaptation of the Hello World how-to example, integrated into an XCode project for iOS. The program makes use of the Cocoa Touch UI and will run on a device or simulator. This has been tested with both XCode 3 and XCode 4.</p>
        <h3>File Listing</h3>
        <p>Project Files</p>
        <ul>
            <li value="1">Ios.xcodeproj (the main project file)</li>
            <li value="2">en.lproj (IB files from the project template)</li>
            <li value="3">Ios-Info.plist (plist file from the project template)</li>
        </ul>
        <p>Source Files</p>
        <ul>
            <li value="1">Ios-Prefix.pch</li>
            <li value="2">IosAppDelegate.h</li>
            <li value="3">IosAppDelegate.m</li>
            <li value="4">IosViewController.h</li>
            <li value="5">IosViewController.m</li>
            <li value="6">main.m</li>
        </ul>
        <p>Database Source Files (typically generated by DDLP, but included for convenience)</p>
        <ul>
            <li value="1">hello_world_dbd.c</li>
            <li value="2">hello_world_dbd.h</li>
            <li value="3">hello_world.h</li>
        </ul>
        <p>Database Schema File</p>
        <ul>
            <li value="1">hello_world.ddl</li>
        </ul>
        <h3>Building &amp; Running the Project</h3>
        <p>Start by opening the project file from the GettingStarted/examples/Ios directory in the install (note that you will need to have XCode installed with the iOS SDK).</p>
        <p>
            <img src="../../Resources/Images/ios-1.png" title="Open the XCode Project file" />
        </p>
        <p>To run the program, simply click "Run" or "Build &amp; Go" in XCode, and it will build and launch in the simulator.</p>
        <p>
            <img src="../../Resources/Images/ios_sim.png" />
        </p>
        <h3>Running on an iOS Device</h3>
        <p class="Notes">Note: To develop for an actual device, you will need to obtain an actual device package, labeled as "ios" as opposed to "ios_sim". Please see <a href="http://www.raima.com/">http://www.raima.com/</a> for details.</p>
        <p>To run the example on a device, we need to tell XCode to use the <span class="MyVariablesProductShortName">RDM</span> libraries targeted for the device (ARM) instead of the simulator (i386). To do this, simply go to the Build Settings for the Project, and scroll down to the "Search Paths" section. In the Library Search Paths entry, simply drag "../../ios/lib" to the top of the list. This tells XCode to choose the device libraries over the simulator libraries.</p>
        <p>
            <img src="../../Resources/Images/ios-2.png" />
        </p>
        <p>Next, change the target menu in the upper left to Device instead of simulator. Note that you will need a device provisioned for development connected. Please see the <a href="http://developer.apple.com/" title="Apple developer" alt="Apple developer">developer documentation</a> from Apple for information on provisioning.</p>
        <p>
            <img src="../../Resources/Images/ios-3.png" />
        </p>
        <p>Now, building and running will launch the example on your device.</p>
        <h3>Integrating <span class="MyVariablesProductShortName">RDM</span> into an Objective-C Project</h3>
        <p>The <span class="MyVariablesProductShortName">RDM</span> API is a pure C API, however Objective-C is a superset of C, so it has no issues with C code in the same application. However, there are a few things to be aware of when using <span class="MyVariablesProductShortName">RDM</span> in your application.</p>
        <p>The define IPHONE_ARM must be set at some place in the project, to tell the <span class="MyVariablesProductShortName">RDM</span> PSP layer to use the specific implementation of lower level functions for the iOS platform. A good place to put this is in the Prefix header file (.pch), which is created automatically with an XCode template. This will set the define there first.</p><pre xml:space="preserve">//Ios-Prefix.pch
#import &lt;Availability.h&gt;
#ifndef __IPHONE_3_0
#warning "This project uses features only available in iPhone SDK 3.0 and later."
#endif

#ifdef __OBJC__

#import &lt;UIKit/UIKit.h&gt;
    #import &lt;Foundation/Foundation.h&gt;
#endif

#define IPHONE_ARM</pre>
        <p>Prior to opening an <span class="MyVariablesProductShortName">RDM</span> database, it is required to open a task. This allocates memory to be used for a connection to the database, whether local or remote. In addition, the correct document root must be passed in to d_tfsinit(), or it will attempt to use "/", which is not writeable on an iOS device. When done using the database, the task must then be closed with a corresponding d_closetask() call, along with a call to d_tfsterm().</p><pre xml:space="preserve">//IosViewController.m


//Get the Application Documents directory
NSArray *path = [[NSArray alloc] initWithArray:NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES)];
NSString *documentsDirectory = [[NSString alloc] initWithString:[path objectAtIndex:0]];

//Call tfsinit to set document root to the Documents directory
iStatus = d_tfsinit([documentsDirectory UTF8String], NULL, NULL);
[documentsDirectory release];
[path release];</pre>
        <p>When retrieving data from the database, the <span class="MyVariablesProductShortName">RDM</span> core API will return the info in a struct. In order to present the data through the UI, this will likely need to be put into an object that you define. Data types such as char will need to be converted to NSString in order to be shown through the UI. We've shown an instance of this in the example, through the use of the <span class="code">stringWithUTF8String</span> method from the NSString class.</p><pre xml:space="preserve">self.label.text = [NSString stringWithUTF8String:sInfo.myChar];</pre>
        <hr MadCap:conditions="Default.ScreenOnly" width="100%" size="0" align="center" />
        <p MadCap:conditions="Default.ScreenOnly" style="font-size: 8pt;"><span class="MyVariablesCopyright">Copyright Â© 2012, Raima Inc. All rights reserved.</span>
        </p>
        <script type="text/javascript" src="../../SkinSupport/MadCapBodyEnd.js">
        </script>
        <p class="MCWebHelpFramesetLink MCWebHelpFramesetLinkBottom" style="display: none;"><a href="../../../Default_CSH.htm#TUTORIAL/Examples/IOSexample.htm" style="">Open topic with navigation</a>
        </p>
    </body>
</html>