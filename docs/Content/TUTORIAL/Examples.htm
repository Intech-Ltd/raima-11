<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:tocPath="" MadCap:InPreviewMode="false" MadCap:PreloadImages="false" MadCap:RuntimeFileType="Topic" MadCap:TargetType="WebHelp" lang="en-us" xml:lang="en-us" MadCap:PathToHelpSystem="../../" MadCap:HelpSystemFileName="Default.xml" MadCap:SearchType="Stem">
    <head>
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>Getting Started Examples and Tutorials</title>
        <link rel="icon" type="image/png" href="http://docs.raima.com/favicon.png" />
        <link href="../SkinSupport/MadCap.css" rel="stylesheet" />
        <link href="../Resources/TableStyles/ODBCStateTable.css" rel="stylesheet" />
        <link href="../Resources/Stylesheets/raima.css" rel="stylesheet" />
        <script src="../SkinSupport/MadCapAll.js" type="text/javascript">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink MCWebHelpFramesetLinkTop" style="display: none;"><a href="../../Default_CSH.htm#TUTORIAL/Examples.htm" style="">Open topic with navigation</a>
        </p>
        <div class="MCBreadcrumbsBox_0"><span class="MCBreadcrumbsPrefix">You are here: </span><span class="MCBreadcrumbs">Getting Started Examples and Tutorials</span>
        </div>
        <h1>Getting Started Examples and Tutorials</h1>
        <p>The example and tutorial files listed here are provided as-is. If possible and where applicable, they have been built and tested on multiple reference platforms. Permission is granted to use all or portions of the contents of this directory for your own purposes.</p>
        <p>The <code>GettingStarted</code> directory has two subdirectories:&#160;<code>examples</code> and <code>tutorials</code>. The general division between the two directories is: tutorials contain simple programs demonstrating a specific concept; and, <code>examples</code> contains self contained example applications and databases.</p>
        <h2>Examples Directory</h2>
        <p>The follow examples can be found in the <code>GettingStarted/examples</code> directory:</p>
        <table style="width: 100%;mc-table-style: url('../Resources/TableStyles/ODBCStateTable.css');margin-left: 0;margin-right: auto;" class="TableStyle-ODBCStateTable" cellspacing="0">
            <col class="Column-Column1" style="width: 125px;" />
            <col class="Column-Column2" style="width: 175px;" />
            <col class="Column-Column3" />
            <thead>
                <tr class="Head-Header1">
                    <th class="HeadE-Column1-Header1">Directory</th>
                    <th class="HeadE-Column2-Header1">Focus</th>
                    <th class="HeadD-Column3-Header1">Description</th>
                </tr>
            </thead>
            <tbody>
                <tr class="Body-Body1">
                    <td class="BodyE-Column1-Body1" style="font-size: 10pt;font-family: monospace;"><a href="Examples/BOMexample.htm">bom</a>
                    </td>
                    <td class="BodyE-Column2-Body1">Core API</td>
                    <td class="BodyD-Column3-Body1">Bill of Materials (Network Model)</td>
                </tr>
                <tr class="Body-Body1" MadCap:conditions="Default.PKGCPP">
                    <td class="BodyE-Column1-Body1" style="font-size: 10pt;font-family: monospace;"><a href="Examples/CPPBOMexample.htm">cppbom</a>
                    </td>
                    <td class="BodyE-Column2-Body1">C++&#160;API</td>
                    <td class="BodyD-Column3-Body1">Bill of Materials (Network Model)</td>
                </tr>
                <tr class="Body-Body1" MadCap:conditions="Default.PKGOjbC">
                    <td class="BodyE-Column1-Body1" style="font-size: 10pt;font-family: monospace;"><a href="Examples/IOSexample.htm">Ios</a>
                    </td>
                    <td class="BodyE-Column2-Body1">Objective-C</td>
                    <td class="BodyD-Column3-Body1">Demonstrates usage of <span class="MyVariablesProductShortName">RDM</span> from an Objective-C iOS project.</td>
                </tr>
                <tr class="Body-Body1">
                    <td class="BodyE-Column1-Body1" style="font-size: 10pt;font-family: monospace;"><a href="Examples/MARKETexample.htm">market</a>
                    </td>
                    <td class="BodyE-Column2-Body1">Core API</td>
                    <td class="BodyD-Column3-Body1">Simplistic Stock Market Simulation</td>
                </tr>
                <tr class="Body-Body1">
                    <td class="BodyE-Column1-Body1" style="font-size: 10pt;font-family: monospace;"><a href="Examples/POIexample.htm">poi</a>
                    </td>
                    <td class="BodyE-Column2-Body1">Core API</td>
                    <td class="BodyD-Column3-Body1">Points of Interest</td>
                </tr>
                <tr class="Body-Body1">
                    <td class="BodyE-Column1-Body1" style="font-size: 10pt;font-family: monospace;"><a href="Examples/RBOMexample.htm">rbom</a>
                    </td>
                    <td class="BodyE-Column2-Body1">Core API</td>
                    <td class="BodyD-Column3-Body1">Bill of Materials (Relational Model)</td>
                </tr>
                <tr class="Body-Body1" MadCap:conditions="Default.PKGSQL">
                    <td class="BodyE-Column1-Body1" style="font-size: 10pt;font-family: monospace;"><a href="Examples/SBOMODBCexample.htm">sbomODBC</a>
                    </td>
                    <td class="BodyE-Column2-Body1">ODBC&#160;API</td>
                    <td class="BodyD-Column3-Body1">Bill of Materials (Relational Model)</td>
                </tr>
                <tr class="Body-Body1" MadCap:conditions="Default.PKGSQL">
                    <td class="BodyE-Column1-Body1" style="font-size: 10pt;font-family: monospace;"><a href="Examples/SBOMRSQLexample.htm">sbomRSQL</a>
                    </td>
                    <td class="BodyE-Column2-Body1">RSQL&#160;API</td>
                    <td class="BodyD-Column3-Body1">Bill of Materials (Relational Model)</td>
                </tr>
                <tr class="Body-Body1">
                    <td class="BodyE-Column1-Body1" style="font-size: 10pt;font-family: monospace;"><a href="Examples/AudioDBexample.htm">songs</a>
                    </td>
                    <td class="BodyE-Column2-Body1">Core&#160;API</td>
                    <td class="BodyD-Column3-Body1">Audio Database</td>
                </tr>
                <tr class="Body-Body1">
                    <td class="BodyE-Column1-Body1" style="font-size: 10pt;font-family: monospace;"><a href="Examples/TIMSexample.htm">tims</a>
                    </td>
                    <td class="BodyE-Column2-Body1">Core API</td>
                    <td class="BodyD-Column3-Body1">Technical Information Management System</td>
                </tr>
                <tr class="Body-Body1" MadCap:conditions="Default.PKGSQL">
                    <td class="BodyE-Column1-Body1" style="font-size: 10pt;font-family: monospace;"><a href="../SQL/Chapter11.htm">sql_db</a>
                    </td>
                    <td class="BodyE-Column2-Body1">RSQL&#160;API</td>
                    <td class="BodyD-Column3-Body1">Example code from Using SQL in an Application Program</td>
                </tr>
                <tr class="Body-Body1" MadCap:conditions="Default.PKGSQL">
                    <td class="BodyE-Column1-Body1" style="font-size: 10pt;font-family: monospace;"><a href="../SQL/Chapter13.htm">sqlVT</a>
                    </td>
                    <td class="BodyE-Column2-Body1">RSQL&#160;API</td>
                    <td class="BodyD-Column3-Body1">Example code from Using Virtual Tables to Access Any Data</td>
                </tr>
                <tr class="Body-Body1">
                    <td class="BodyB-Column1-Body1" style="font-size: 10pt;font-family: monospace;"><a href="Examples/timsserver.htm">timsserver</a>
                    </td>
                    <td class="BodyB-Column2-Body1">HTTP API</td>
                    <td class="BodyA-Column3-Body1">Example HTTP&#160;application</td>
                </tr>
            </tbody>
        </table>
        <h2>Tutorial Directory</h2>
        <p>The follow tutorials can be found in the <code>GettingStarted/tutorials</code> directory:</p>
        <table style="width: 100%;mc-table-style: url('../Resources/TableStyles/ODBCStateTable.css');margin-left: 0;margin-right: auto;" class="TableStyle-ODBCStateTable" cellspacing="0">
            <col class="Column-Column1" style="width: 125px;" />
            <col class="Column-Column2" style="width: 175px;" />
            <col class="Column-Column3" />
            <thead>
                <tr class="Head-Header1">
                    <th class="HeadE-Column1-Header1">Directory</th>
                    <th class="HeadE-Column2-Header1">Focus</th>
                    <th class="HeadD-Column3-Header1">Description</th>
                </tr>
            </thead>
            <tbody>
                <tr class="Body-Body1">
                    <td class="BodyE-Column1-Body1" style="font-size: 10pt;font-family: monospace;">CircularTable</td>
                    <td class="BodyE-Column2-Body1">Core API</td>
                    <td class="BodyD-Column3-Body1">Describes the process to create a circular record in a database, insert a circular record, and read data from this database.</td>
                </tr>
                <tr class="Body-Body1">
                    <td class="BodyE-Column1-Body1" style="font-size: 10pt;font-family: monospace;">CompoundKey</td>
                    <td class="BodyE-Column2-Body1">Core&#160;API</td>
                    <td class="BodyD-Column3-Body1"> Describes the process to create a simple database containing a key, insert records, and read data through the key.</td>
                </tr>
                <tr class="Body-Body1">
                    <td class="BodyE-Column1-Body1" style="font-size: 10pt;font-family: monospace;">DuplicateKey</td>
                    <td class="BodyE-Column2-Body1">Core API</td>
                    <td class="BodyD-Column3-Body1">Describes the process to create a simple database containing a key, insert records, and read data through the key.</td>
                </tr>
                <tr class="Body-Body1">
                    <td class="BodyE-Column1-Body1" style="font-size: 10pt;font-family: monospace;">HelloWorld</td>
                    <td class="BodyE-Column2-Body1">Core API</td>
                    <td class="BodyD-Column3-Body1">Describes the process to create a simple database, insert a record containing a text field, read the text field from database and print it out.</td>
                </tr>
                <tr class="Body-Body1" MadCap:conditions="Default.PKGSQL">
                    <td class="BodyE-Column1-Body1" style="font-size: 10pt;font-family: monospace;">HelloWorldODBC</td>
                    <td class="BodyE-Column2-Body1">ODBC&#160;API</td>
                    <td class="BodyD-Column3-Body1">Describes the process to create a simple database, insert a record containing a text field, read the text field from database and print it out.</td>
                </tr>
                <tr class="Body-Body1" MadCap:conditions="Default.PKGSQL">
                    <td class="BodyE-Column1-Body1" style="font-size: 10pt;font-family: monospace;">HelloWorldRSQL</td>
                    <td class="BodyE-Column2-Body1">RSQL&#160;API</td>
                    <td class="BodyD-Column3-Body1">Describes the process to create a simple database, insert a record containing a text field, read the text field from database and print it out.</td>
                </tr>
                <tr class="Body-Body1">
                    <td class="BodyE-Column1-Body1" style="font-size: 10pt;font-family: monospace;">HybridInMem</td>
                    <td class="BodyE-Column2-Body1">Core API</td>
                    <td class="BodyD-Column3-Body1">Describes the process to create a simple database that stores data both
in in-memory tables and on-disk tables. We'll insert a record in each table, and read 
the data back from both.</td>
                </tr>
                <tr class="Body-Body1">
                    <td class="BodyE-Column1-Body1" style="font-size: 10pt;font-family: monospace;">InMem</td>
                    <td class="BodyE-Column2-Body1">Core&#160;API</td>
                    <td class="BodyD-Column3-Body1">Describes the process to create a simple pure in-memory database, 
insert a record, and read data from the database. This application requires no 
persistent storage to run and can act as a simple example for disk less 
applications.</td>
                </tr>
                <tr class="Body-Body1">
                    <td class="BodyE-Column1-Body1" style="font-size: 10pt;font-family: monospace;">MultiUser</td>
                    <td class="BodyE-Column2-Body1">Core API</td>
                    <td class="BodyD-Column3-Body1">Describes the process to create a simple database that uses multiple 
threads to access and update the database. Note that the database is opened in shared 
mode because it requires locking from each task that will be using it.</td>
                </tr>
                <tr class="Body-Body1">
                    <td class="BodyE-Column1-Body1" style="font-size: 10pt;font-family: monospace;">OneToMany</td>
                    <td class="BodyE-Column2-Body1">Core API</td>
                    <td class="BodyD-Column3-Body1">Describes the process to create a simple one-to-many relationship 
between two records in a <span class="MyVariablesProductShortName">RDM</span> database. We'll insert records and read 
them back from the database.</td>
                </tr>
                <tr class="Body-Body1">
                    <td class="BodyE-Column1-Body1" style="font-size: 10pt;font-family: monospace;">OptionalKey</td>
                    <td class="BodyE-Column2-Body1">Core API</td>
                    <td class="BodyD-Column3-Body1">Describes the process to create a simple database containing an
optional key, insert records, and read data through the key.</td>
                </tr>
                <tr class="Body-Body1">
                    <td class="BodyE-Column1-Body1" style="font-size: 10pt;font-family: monospace;">Transaction</td>
                    <td class="BodyE-Column2-Body1">Core API</td>
                    <td class="BodyD-Column3-Body1">Describes the process to create a simple database that stores data using
transactions. We'll insert a hundred records in the table, and verify by counting the number of records stored in the database.</td>
                </tr>
                <tr class="Body-Body1">
                    <td class="BodyB-Column1-Body1" style="font-size: 10pt;font-family: monospace;">UniqueKey</td>
                    <td class="BodyB-Column2-Body1">Core&#160;API</td>
                    <td class="BodyA-Column3-Body1">Describes the process to create a simple database containing a
unique key, insert records, and read data through the key.</td>
                </tr>
            </tbody>
        </table>
        <hr MadCap:conditions="Default.ScreenOnly" width="100%" size="0" align="center" />
        <p MadCap:conditions="Default.ScreenOnly" style="font-size: 8pt;"><span class="MyVariablesCopyright">Copyright © 2012, Raima Inc. All rights reserved.</span>
        </p>
        <script type="text/javascript" src="../SkinSupport/MadCapBodyEnd.js">
        </script>
        <p class="MCWebHelpFramesetLink MCWebHelpFramesetLinkBottom" style="display: none;"><a href="../../Default_CSH.htm#TUTORIAL/Examples.htm" style="">Open topic with navigation</a>
        </p>
    </body>
</html>