<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:tocPath="SQL API|SQL Language Guide|Reference Guide|SQL Virtual Table Function Reference" MadCap:InPreviewMode="false" MadCap:PreloadImages="false" MadCap:RuntimeFileType="Topic" MadCap:TargetType="WebHelp" lang="en-us" xml:lang="en-us" MadCap:PathToHelpSystem="../../../" MadCap:HelpSystemFileName="Default.xml" MadCap:SearchType="Stem">
    <head>
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>vtSelectOpen</title>
        <link rel="icon" type="image/png" href="http://docs.raima.com/favicon.png" />
        <link href="../../SkinSupport/MadCap.css" rel="stylesheet" />
        <link href="../../Resources/TableStyles/FunctionArgs.css" rel="stylesheet" />
        <link href="../../Resources/TableStyles/ParamStruct.css" rel="stylesheet" />
        <link href="../../Resources/TableStyles/SQLErrorCodes.css" rel="stylesheet" />
        <link href="../../Resources/Stylesheets/raima.css" rel="stylesheet" />
        <script src="../../SkinSupport/MadCapAll.js" type="text/javascript">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink MCWebHelpFramesetLinkTop" style="display: none;"><a href="../../../Default_CSH.htm#SQL/VTREF/vtSelectOpen.htm" style="">Open topic with navigation</a>
        </p>
        <div class="MCBreadcrumbsBox_0"><span class="MCBreadcrumbsPrefix">You are here: </span><a class="MCBreadcrumbsLink" href="../../dbRSQL.htm">SQL API</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="../dbSQL.htm">SQL Language Guide</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="../SQLStmtRef.htm">Reference Guide</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">vtSelectOpen</span>
        </div>
        <h3 class="newpage">vtSelectOpen<a name="kanchor262"></a></h3>
        <p>Process execution of SQL statement access to virtual table</p>
        <p class="Heading">Prototype</p><pre xml:space="preserve">RSQL_ERRCODE EXTERNAL_FCN <i>vtSelectOpen</i>( 
    HSTMT            hstmt,   
    uint16_t         nocols,  
    VCOL_INFO       *colsvals,
    void            *pRegCtx, 
    void            *pFetchCtx, 
    RSQL_VALUE      *pkeyval)</pre>
        <p class="Heading">Arguments</p>
        <table style="width: 100%;mc-table-style: url('../../Resources/TableStyles/FunctionArgs.css');margin-left: 0;margin-right: auto;" class="TableStyle-FunctionArgs" cellspacing="0">
            <col class="Column-Column1" />
            <col class="Column-Column3" />
            <col class="Column-Column2" />
            <tbody>
                <tr class="Body-Body1">
                    <td class="BodyE-Column1-Body1">hstmt</td>
                    <td class="BodyE-Column3-Body1">(input)</td>
                    <td class="BodyD-Column2-Body1">Statement handle of SQL statement containing the virtual table reference.</td>
                </tr>
                <tr class="Body-Body1">
                    <td class="BodyE-Column1-Body1">nocols</td>
                    <td class="BodyE-Column3-Body1">(input)</td>
                    <td class="BodyD-Column2-Body1">Number of referenced columns (size of <code>colsvals</code> array).</td>
                </tr>
                <tr class="Body-Body1">
                    <td class="BodyE-Column1-Body1">colsvals</td>
                    <td class="BodyE-Column3-Body1">(input)</td>
                    <td class="BodyD-Column2-Body1">Array of referenced column value containers.</td>
                </tr>
                <tr class="Body-Body1">
                    <td class="BodyE-Column1-Body1">pRegCtx</td>
                    <td class="BodyE-Column3-Body1">(input)</td>
                    <td class="BodyD-Column2-Body1">Pointer to the user program allocated context data area that was originally passed in through the call to <code>rsqlRegisterVirtualTables</code>.</td>
                </tr>
                <tr class="Body-Body1">
                    <td class="BodyE-Column1-Body1">pFetchCtx</td>
                    <td class="BodyE-Column3-Body1">(input)</td>
                    <td class="BodyD-Column2-Body1">Pointer to the fetch context data area.</td>
                </tr>
                <tr class="Body-Body1">
                    <td class="BodyB-Column1-Body1">pkeyval</td>
                    <td class="BodyB-Column3-Body1">(input)</td>
                    <td class="BodyA-Column2-Body1">Pointer to specified primary key value. Non-<code>NULL</code> only when executing "<b>select</b> ... <b>from</b> virtab <b>where</b> pkey = <i>value</i>" statement. </td>
                </tr>
            </tbody>
        </table>
        <p class="Heading">Description</p>
        <p>This is a callback function, implemented by you, that is called by SQL to execute a select statement that references the virtual table. The name of the function can be anything as the <span class="MyVariablesRSQLName">RDM SQL</span> system only calls this function through a pointer to it contained in the <code>VTFLOADTABLE struct</code> entry for its associated virtual table.</p>
        <p>Each entry of the <code>colsvals</code> array contains information about a virtual table column that is referenced in the SQL statement.  This information is contained in the <code>VCOL_INFO struct</code> type whose fields are described in the following table.</p>
        <table style="mc-table-style: url('../../Resources/TableStyles/ParamStruct.css');margin-left: 0;margin-right: auto;" class="TableStyle-ParamStruct" cellspacing="0">
            <caption>Table 4. VCOL_INFO Description</caption>
            <col class="Column-Column1" />
            <col class="Column-Column2" />
            <col class="Column-Column3" />
            <thead>
                <tr class="Head-Header1">
                    <th class="HeadE-Column1-Header1">Field Name</th>
                    <th class="HeadE-Column2-Header1">Data Type</th>
                    <th class="HeadD-Column3-Header1">Description</th>
                </tr>
            </thead>
            <tbody>
                <tr class="Body-Body1">
                    <td class="BodyE-Column1-Body1">colno</td>
                    <td class="BodyE-Column2-Body1">int16_t</td>
                    <td class="BodyD-Column3-Body1">Ordinal position of column in table declaration: 0 (first column) to # of columns in table â€“ 1 (last column).</td>
                </tr>
                <tr class="Body-Body1">
                    <td class="BodyE-Column1-Body1">len</td>
                    <td class="BodyE-Column2-Body1">uint32_t</td>
                    <td class="BodyD-Column3-Body1">Column length in bytes.</td>
                </tr>
                <tr class="Body-Body1">
                    <td class="BodyE-Column1-Body1">is_null</td>
                    <td class="BodyE-Column2-Body1">int16_t *</td>
                    <td class="BodyD-Column3-Body1">Pointer to variable containing the null indicator flag: *is_null = 0 =&gt; not null, *is_null = 1 =&gt; is null.</td>
                </tr>
                <tr class="Body-Body1">
                    <td class="BodyB-Column1-Body1">data</td>
                    <td class="BodyB-Column2-Body1">void *</td>
                    <td class="BodyA-Column3-Body1">Pointer to the buffer containing the column value.</td>
                </tr>
            </tbody>
        </table>
        <p>Note that the <code>is_null</code> field is a pointer to the <code>int16_t</code> variable that is used by SQL system to indicate that a column value is null.  By assigning this through the pointer it eliminates the need for the SQL system to perform an extra loop through the <code>colsvals</code> array.</p>
        <p>The fetch context pointer contains the address of a data area that is be used by <code>vtFetch</code> to control the fetching of rows from the virtual table.  The context used in the <code>virtab</code> example is defined by the <code>VTAB_CTX struct typedef</code> declaration given below.</p><pre xml:space="preserve">typedef struct vtab_ctx {
    uint64_t      rowcnt;       /* count of rows fetched */
    uint64_t      rowno;        /* number of next row to be fetched */
    RSQL_VALUE   *pkeyval;      /* ptr to primary key's value */
} VTAB_CTX;
</pre>
        <p>The <code>rowno</code> contains the <code>vtabrows</code> index of the next row to be returned by <code>vtFetch</code>. The <code>rowcnt</code> and a non-<code>NULL</code> <![CDATA[ ]]><code>pkeyval</code> is used to ensure that only one row is returned when the <b>select</b> statement included the "where pkey = <i>value</i>" clause.</p>
        <p>If a primary key value is specified then <i>vtSelectOpen</i> needs to locate the row with that value (lines 30-34) and set <code>pCtx-&gt;rowno</code> to it.  If it is not found then <code>pCtx-&gt;rowno</code> is set to <code>norows</code> which will cause <code>vtFetch</code> to return <code>errNOMOREDATA</code>.</p>
        <p class="Heading">Example</p><pre xml:space="preserve"> 1	/* ========================================================================
 2	    Virtual table SELECT execution function 
 3	*/
 4	static RSQL_ERRCODE EXTERNAL_FCN vtabSelectOpen(  /* vtSelectOpen() */
 5	    HSTMT        hstmt,        /* in:  statement handle */
 6	    uint16_t     nocols,       /* in:  no. of ref'd columns */
 7	    VCOL_INFO   *colsvals,     /* in:  array of ref'd column value containers */
 8	    void        *pRegCtx,      /* in:  ptr to registration context */
 9	    void        *pFCtx,        /* in:  ptr to fetch context */
10	    RSQL_VALUE  *pkeyval)      /* in:  ptr to primary key value */
11	{
12	    RSQL_ERRCODE stat = errSUCCESS;
13	    uint32_t     rowno;
14	    VTAB_CTX    *pCtx = (VTAB_CTX *)pFCtx;
15	    
16	    UNREF_PARM(hstmt)
17	    UNREF_PARM(pRegCtx)
18	    
19	    pCtx-&gt;rowcnt   = 0;
20	    pCtx-&gt;rowno    = rowno = 0;
21	    pCtx-&gt;pkeyval  = pkeyval;
22	
23	    vtabEnter();
24	    
25	    if ( !vtabrows ) {
26	        vtabrows = calloc(maxrows, sizeof(struct virtab));
27	    }
28	    else if ( pkeyval ) {
29	        /* locate row with matching primary key */
30	        for ( rowno = 0; rowno &lt; norows; ++rowno ) {
31	            if ( pkeyval-&gt;vt.lv == vtabrows[rowno].pkey )
32	                break;
33	        }
34	        pCtx-&gt;rowno = rowno;
35	    }
36	    vtabExit();
37	    
38	    return stat;
39	}
</pre>
        <p class="Heading">Return Codes</p>
        <table class="TableStyle-SQLErrorCodes" cellspacing="0" style="mc-table-style: url('../../Resources/TableStyles/SQLErrorCodes.css');">
            <col class="Column-Column1" />
            <col class="Column-Column2" />
            <col class="Column-Column3" />
            <col class="Column-Column4" />
            <tbody>
                <tr class="Body-Body1">
                    <th class="BodyB-Column1-Body1" style="font-weight: bold;">Error Code</th>
                    <th class="BodyB-Column2-Body1" style="font-weight: bold;">Enum Identifier</th>
                    <th class="BodyB-Column3-Body1" style="font-weight: bold;">SQL State</th>
                    <th class="BodyA-Column4-Body1" style="font-weight: bold;">Description</th>
                </tr>
            </tbody>
        </table>
        <table class="TableStyle-SQLErrorCodes" cellspacing="0" style="mc-table-style: url('../../Resources/TableStyles/SQLErrorCodes.css');">
            <col class="Column-Column1" />
            <col class="Column-Column2" />
            <col class="Column-Column3" />
            <col class="Column-Column4" />
            <tbody>
                <tr class="Body-Body1">
                    <td class="BodyB-Column1-Body1">0</td>
                    <td class="BodyB-Column2-Body1">errSUCCESS</td>
                    <td class="BodyB-Column3-Body1">00000</td>
                    <td class="BodyA-Column4-Body1">no error was detected</td>
                </tr>
            </tbody>
        </table>
        <p class="Heading">See Also</p>
        <p><a href="../../SQLRM/rsqlRegisterVirtualTables.htm">rsqlRegisterVirtualTables</a>
        </p>
        <p><a href="vtRowCount.htm">vtRowCount</a>
        </p>
        <p><a href="vtSelectCount.htm">vtSelectCount</a>
        </p>
        <p><a href="vtFetch.htm">vtFetch</a>
        </p>
        <p><a href="vtSelectClose.htm">vtSelectClose</a>
        </p>
        <hr MadCap:conditions="Default.ScreenOnly" width="100%" size="0" align="center" />
        <p MadCap:conditions="Default.ScreenOnly" style="font-size: 8pt;"><span class="MyVariablesCopyright">Copyright Â© 2012, Raima Inc. All rights reserved.</span>
        </p>
        <script type="text/javascript" src="../../SkinSupport/MadCapBodyEnd.js">
        </script>
        <p class="MCWebHelpFramesetLink MCWebHelpFramesetLinkBottom" style="display: none;"><a href="../../../Default_CSH.htm#SQL/VTREF/vtSelectOpen.htm" style="">Open topic with navigation</a>
        </p>
    </body>
</html>