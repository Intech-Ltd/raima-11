<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:tocPath="SQL API|SQL Language Guide|Reference Guide|SQL UDF Reference" MadCap:InPreviewMode="false" MadCap:PreloadImages="false" MadCap:RuntimeFileType="Topic" MadCap:TargetType="WebHelp" lang="en-us" xml:lang="en-us" MadCap:PathToHelpSystem="../../../" MadCap:HelpSystemFileName="Default.xml" MadCap:SearchType="Stem">
    <head>
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>udfCheck</title>
        <link rel="icon" type="image/png" href="http://docs.raima.com/favicon.png" />
        <link href="../../SkinSupport/MadCap.css" rel="stylesheet" />
        <link href="../../Resources/TableStyles/Col3DataType.css" rel="stylesheet" />
        <link href="../../Resources/TableStyles/FunctionArgs.css" rel="stylesheet" />
        <link href="../../Resources/TableStyles/SQLErrorCodes.css" rel="stylesheet" />
        <link href="../../Resources/Stylesheets/raima.css" rel="stylesheet" />
        <script src="../../SkinSupport/MadCapAll.js" type="text/javascript">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink MCWebHelpFramesetLinkTop" style="display: none;"><a href="../../../Default_CSH.htm#SQL/UDFREF/udfCheck.htm" style="">Open topic with navigation</a>
        </p>
        <div class="MCBreadcrumbsBox_0"><span class="MCBreadcrumbsPrefix">You are here: </span><a class="MCBreadcrumbsLink" href="../../dbRSQL.htm">SQL API</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="../dbSQL.htm">SQL Language Guide</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="../SQLStmtRef.htm">Reference Guide</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">udfCheck</span>
        </div>
        <h3 class="newpage">udfCheck<a name="kanchor253"></a></h3>
        <p>Check user-defined function argument types and return result type</p>
        <p class="Heading">Prototype</p><pre xml:space="preserve">RSQL_ERRCODE EXTERNAL_FCN <i>udfCheck</i>(
    HSTMT               hStmt,  
    void               *pRegCtx,
    uint16_t            noargs, 
    const RSQL_VALUE   *pArgs,  
    SQL_T              *pType,  
    int16_t            *pDeterm)
</pre>
        <p class="Heading">Arguments</p>
        <table style="width: 100%;mc-table-style: url('../../Resources/TableStyles/FunctionArgs.css');margin-left: 0;margin-right: auto;" class="TableStyle-FunctionArgs" cellspacing="0">
            <col class="Column-Column1" />
            <col class="Column-Column3" />
            <col class="Column-Column2" />
            <tbody>
                <tr class="Body-Body1">
                    <td class="BodyE-Column1-Body1">hStmt</td>
                    <td class="BodyE-Column3-Body1">(input)</td>
                    <td class="BodyD-Column2-Body1">Statement handle of SQL statement referencing this UDF.</td>
                </tr>
                <tr class="Body-Body1">
                    <td class="BodyE-Column1-Body1">pRegCtx</td>
                    <td class="BodyE-Column3-Body1">(input)</td>
                    <td class="BodyD-Column2-Body1">Pointer to the user program allocated registration context data area.</td>
                </tr>
                <tr class="Body-Body1">
                    <td class="BodyE-Column1-Body1">noargs</td>
                    <td class="BodyE-Column3-Body1">(input)</td>
                    <td class="BodyD-Column2-Body1">Number of arguments specified in SQL statement's UDF call.</td>
                </tr>
                <tr class="Body-Body1">
                    <td class="BodyE-Column1-Body1">pArgs</td>
                    <td class="BodyE-Column3-Body1">(input)</td>
                    <td class="BodyD-Column2-Body1">Array of <code>noargs</code> argument value entries.</td>
                </tr>
                <tr class="Body-Body1">
                    <td class="BodyE-Column1-Body1">pType</td>
                    <td class="BodyE-Column3-Body1">(output)</td>
                    <td class="BodyD-Column2-Body1">Pointer to variable to contain the data type of the UDF result value.</td>
                </tr>
                <tr class="Body-Body1">
                    <td class="BodyB-Column1-Body1">pDeterm</td>
                    <td class="BodyB-Column3-Body1">(output)</td>
                    <td class="BodyA-Column2-Body1">Pointer to <code>int16_t</code> variable to contain the deterministic UDF indicator flag.</td>
                </tr>
            </tbody>
        </table>
        <p class="Heading">Description</p>
        <p>This function is called by SQL during compilation (i.e. <code>rsqlPrepare</code>) of a SQL statement that contains a reference to the user-defined function (UDF) for which this particular <i>udfCheck</i> function has been associated in the <code>UDFLOADTABLE</code> specified in a prior call to the <code>rsqlRegisterUDFs</code> function.  The function can have any name you choose.</p>
        <p>The <code>hStmt</code> argument is the statement handle of the SQL statement that contains a reference to the UDF.   It can be used by any of the UDF implementation functions to discover any needed information about the invoking statement (e.g., <code>rsqlGetStmtType</code>).</p>
        <p>The <code>pRegCtx</code> is the registration context pointer that was passed by the application to the <code>rsqlRegisterUDFs</code> function.  This can be used to pass any necessary application-specific control information that may be needed by any of the UDFs (e.g., a random number seed for any function that generates random numbers).</p>
        <p>The <code>pArgs</code> argument is a pointer to <code>an RSQL_VALUE</code> array of <code>noargs</code> elements. The first argument is contained in <code>pArgs[0]</code>.  Most of the time, only the data type from the <code>pArgs RSQL_VALUE</code> array (e.g., <code>args[0].type</code>) needs to be inspected as the actual data value will only be present when a literal constant value is being passed to the function. In order to know which arguments have a literal value, the status field of <code>RSQL_VALUE</code> can be checked (e.g., <code>args[0].status</code>).  When a value is present the status will be set to <code>vsOKAY</code>, if no value is present the status will be set to <code>vsNOVAL</code>.  You can use this, for example, when you want to define an argument for a particular function that is only allowed to take a literal constant. If an argument was specified using a parameter marker or the argument is a stored procedure argument the type will be <code>tNOVAL</code>.  In which case, the actual type checking will need to be done at execution time by the <i>udfScalarCall</i>/<i>udfAggCall</i> function.</p>
        <p>The data type returned by the UDF is returned through the <code>pType</code> argument.  The valid <span class="MyVariablesProductShortName">RDM</span> <![CDATA[ ]]><code>SQL_T</code> data type values that can be returned by a UDF are specified in the table below.</p>
        <table style="margin-left: 0;margin-right: auto;caption-side: top;width: 60%;mc-table-style: url('../../Resources/TableStyles/Col3DataType.css');" class="TableStyle-Col3DataType" cellspacing="0">
            <caption>Table 1. SQL Data Type Values</caption>
            <col class="Column-Column1" style="width: 33%;" />
            <col class="Column-Column2" style="width: 33%;" />
            <col class="Column-Column3" style="width: 33%;" />
            <thead>
                <tr class="Head-Header1">
                    <th class="HeadE-Column1-Header1">SQL Data Type</th>
                    <th class="HeadE-Column2-Header1">SQL_T value</th>
                    <th class="HeadD-Column3-Header1">C Data Type</th>
                </tr>
            </thead>
            <tbody>
                <tr class="Body-Body1">
                    <td class="BodyE-Column1-Body1" style="font-family: monospace;">char</td>
                    <td class="BodyE-Column2-Body1" style="text-align: left;font-family: monospace;">tCHAR</td>
                    <td class="BodyD-Column3-Body1" style="font-family: monospace;">char</td>
                </tr>
                <tr class="Body-Body1">
                    <td class="BodyE-Column1-Body1" style="font-family: monospace;">varchar</td>
                    <td class="BodyE-Column2-Body1" style="text-align: left;font-family: monospace;">tVARCHAR</td>
                    <td class="BodyD-Column3-Body1" style="font-family: monospace;">char</td>
                </tr>
                <tr class="Body-Body1">
                    <td class="BodyE-Column1-Body1" style="font-family: monospace;">wchar</td>
                    <td class="BodyE-Column2-Body1" style="text-align: left;font-family: monospace;">tWCHAR</td>
                    <td class="BodyD-Column3-Body1" style="font-family: monospace;">wchar_t</td>
                </tr>
                <tr class="Body-Body1">
                    <td class="BodyE-Column1-Body1" style="font-family: monospace;">wvarchar</td>
                    <td class="BodyE-Column2-Body1" style="text-align: left;font-family: monospace;">tWVARCHAR</td>
                    <td class="BodyD-Column3-Body1" style="font-family: monospace;">wchar_t</td>
                </tr>
                <tr class="Body-Body1">
                    <td class="BodyE-Column1-Body1" style="font-family: monospace;">binary</td>
                    <td class="BodyE-Column2-Body1" style="text-align: left;font-family: monospace;">tBINARY</td>
                    <td class="BodyD-Column3-Body1" style="font-family: monospace;">uint8_t</td>
                </tr>
                <tr class="Body-Body1">
                    <td class="BodyE-Column1-Body1" style="font-family: monospace;">varbinary</td>
                    <td class="BodyE-Column2-Body1" style="text-align: left;font-family: monospace;">tVARBINARY</td>
                    <td class="BodyD-Column3-Body1" style="font-family: monospace;">uint8_t</td>
                </tr>
                <tr class="Body-Body1">
                    <td class="BodyE-Column1-Body1" style="font-family: monospace;">boolean</td>
                    <td class="BodyE-Column2-Body1" style="text-align: left;font-family: monospace;">tBOOL</td>
                    <td class="BodyD-Column3-Body1" style="font-family: monospace;">int8_t</td>
                </tr>
                <tr class="Body-Body1">
                    <td class="BodyE-Column1-Body1" style="font-family: monospace;">tinyint</td>
                    <td class="BodyE-Column2-Body1" style="text-align: left;font-family: monospace;">tTINYINT</td>
                    <td class="BodyD-Column3-Body1" style="font-family: monospace;">int8_t</td>
                </tr>
                <tr class="Body-Body1">
                    <td class="BodyE-Column1-Body1" style="font-family: monospace;">smallint</td>
                    <td class="BodyE-Column2-Body1" style="text-align: left;font-family: monospace;">tSMALLINT</td>
                    <td class="BodyD-Column3-Body1" style="font-family: monospace;">int16_t</td>
                </tr>
                <tr class="Body-Body1">
                    <td class="BodyE-Column1-Body1" style="font-family: monospace;">integer</td>
                    <td class="BodyE-Column2-Body1" style="text-align: left;font-family: monospace;">tINTEGER</td>
                    <td class="BodyD-Column3-Body1" style="font-family: monospace;">int32_t</td>
                </tr>
                <tr class="Body-Body1">
                    <td class="BodyE-Column1-Body1" style="font-family: monospace;">bigint</td>
                    <td class="BodyE-Column2-Body1" style="text-align: left;font-family: monospace;">tBIGINT</td>
                    <td class="BodyD-Column3-Body1" style="font-family: monospace;">int64_t</td>
                </tr>
                <tr class="Body-Body1">
                    <td class="BodyE-Column1-Body1" style="font-family: monospace;">real</td>
                    <td class="BodyE-Column2-Body1" style="text-align: left;font-family: monospace;">tREAL</td>
                    <td class="BodyD-Column3-Body1" style="font-family: monospace;">float</td>
                </tr>
                <tr class="Body-Body1">
                    <td class="BodyE-Column1-Body1" style="font-family: monospace;">float, double</td>
                    <td class="BodyE-Column2-Body1" style="text-align: left;font-family: monospace;">tFLOAT, tDOUBLE</td>
                    <td class="BodyD-Column3-Body1" style="font-family: monospace;">double</td>
                </tr>
                <tr class="Body-Body1">
                    <td class="BodyE-Column1-Body1" style="font-family: monospace;">date</td>
                    <td class="BodyE-Column2-Body1" style="text-align: left;font-family: monospace;">tDATE</td>
                    <td class="BodyD-Column3-Body1" style="font-family: monospace;">int32_t</td>
                </tr>
                <tr class="Body-Body1">
                    <td class="BodyE-Column1-Body1" style="font-family: monospace;">time</td>
                    <td class="BodyE-Column2-Body1" style="text-align: left;font-family: monospace;">tTIME</td>
                    <td class="BodyD-Column3-Body1" style="font-family: monospace;">int32_t</td>
                </tr>
                <tr class="Body-Body1">
                    <td class="BodyB-Column1-Body1" style="font-family: monospace;">timestamp</td>
                    <td class="BodyB-Column2-Body1" style="text-align: left;font-family: monospace;">tTIMESTAMP</td>
                    <td class="BodyA-Column3-Body1" style="font-family: monospace;">int64_t</td>
                </tr>
            </tbody>
        </table>
        <p>The <code>pDeterm</code> argument is returned from <i>udfCheck</i> to indicate whether or not the function is deterministic.  Setting <code>*pDeterm</code> to 1 indicates that the function is deterministic.  Setting <code>*pDeterm</code> to 0 indicates that it is not.  A deterministic function always returns the same value for all calls that pass the same argument values.  This means that when all of the argument values for a particular call are literals then SQL will call <i>udfInit</i>, <i>udfScalarCall</i>, and <i>udfTerm</i> when the statement that references the UDF is compiled and then replace the call with the literal result value in the compiled statement code.</p>
        <p class="Heading">Example</p><pre xml:space="preserve">#include "rsql.h"
...
/* ======================================================================
   Soundex - type checking function (1 argument == name to be encoded)
*/
static RSQL_ERRCODE EXTERNAL_FCN SndxCheck(
    HSTMT             hStmt,        /* in:  statement handle */
    void             *pRegCtx,      /* in:  ptr to registration context */
    uint16_t          noargs,       /* in:  number of arguments to function */
    const RSQL_VALUE *args,         /* in:  array of argument values */
    SQL_T            *fcntype,      /* out: result data type */
    int16_t          *pDeterm)      /* out: = 1 deterministic */
{
    RSQL_ERRCODE status;

    UNREF_PARM(hStmt)
    UNREF_PARM(pRegCtx)

    if ( !args || noargs != 1 )
        status = errUDFNOARGS;
    else if ( args-&gt;type != tNOVAL &amp;&amp; args-&gt;type !=tCHAR &amp;&amp; args-&gt;type !=tVARCHAR )
        status = errUDFARG;
    else {
        status = errSUCCESS;
        *fcntype = tCHAR;
        *pDeterm = 1;
    }
    return status;
}
</pre>
        <p class="Heading">Return Codes</p>
        <table class="TableStyle-SQLErrorCodes" cellspacing="0" style="mc-table-style: url('../../Resources/TableStyles/SQLErrorCodes.css');">
            <col class="Column-Column1" />
            <col class="Column-Column2" />
            <col class="Column-Column3" />
            <col class="Column-Column4" />
            <tbody>
                <tr class="Body-Body1">
                    <th class="BodyB-Column1-Body1" style="font-weight: bold;">Error Code</th>
                    <th class="BodyB-Column2-Body1" style="font-weight: bold;">Enum Identifier</th>
                    <th class="BodyB-Column3-Body1" style="font-weight: bold;">SQL State</th>
                    <th class="BodyA-Column4-Body1" style="font-weight: bold;">Description</th>
                </tr>
            </tbody>
        </table>
        <table class="TableStyle-SQLErrorCodes" cellspacing="0" style="mc-table-style: url('../../Resources/TableStyles/SQLErrorCodes.css');">
            <col class="Column-Column1" />
            <col class="Column-Column2" />
            <col class="Column-Column3" />
            <col class="Column-Column4" />
            <tbody>
                <tr class="Body-Body1">
                    <td class="BodyB-Column1-Body1">0</td>
                    <td class="BodyB-Column2-Body1">errSUCCESS</td>
                    <td class="BodyB-Column3-Body1">00000</td>
                    <td class="BodyA-Column4-Body1">no error was detected</td>
                </tr>
            </tbody>
        </table>
        <table class="TableStyle-SQLErrorCodes" cellspacing="0" style="mc-table-style: url('../../Resources/TableStyles/SQLErrorCodes.css');">
            <col class="Column-Column1" />
            <col class="Column-Column2" />
            <col class="Column-Column3" />
            <col class="Column-Column4" />
            <tbody>
                <tr class="Body-Body1">
                    <td class="BodyB-Column1-Body1">83</td>
                    <td class="BodyB-Column2-Body1">errUDF</td>
                    <td class="BodyB-Column3-Body1">RX011</td>
                    <td class="BodyA-Column4-Body1">user-defined function error</td>
                </tr>
            </tbody>
        </table>
        <table class="TableStyle-SQLErrorCodes" cellspacing="0" style="mc-table-style: url('../../Resources/TableStyles/SQLErrorCodes.css');">
            <col class="Column-Column1" />
            <col class="Column-Column2" />
            <col class="Column-Column3" />
            <col class="Column-Column4" />
            <tbody>
                <tr class="Body-Body1">
                    <td class="BodyB-Column1-Body1">86</td>
                    <td class="BodyB-Column2-Body1">errUDFARG</td>
                    <td class="BodyB-Column3-Body1">21000</td>
                    <td class="BodyA-Column4-Body1">invalid funtion argument type</td>
                </tr>
            </tbody>
        </table>
        <p class="Heading">See Also</p>
        <p><a href="../../SQLRM/rsqlRegisterUDFs.htm">rsqlRegisterUDFs</a>
        </p>
        <p><a href="udfInit.htm">udfInit</a>
        </p>
        <p><a href="udfTerm.htm">udfTerm</a>
        </p>
        <p><a href="udfScalarCall.htm">udfScalarCall</a>
        </p>
        <p><a href="udfAggCall.htm">udfAggCall</a>
        </p>
        <p><a href="udfAggResult.htm">udfAggResult</a>
        </p>
        <p><a href="udfAggReset.htm">udfAggReset</a>
        </p>
        <hr MadCap:conditions="Default.ScreenOnly" width="100%" size="0" align="center" />
        <p MadCap:conditions="Default.ScreenOnly" style="font-size: 8pt;"><span class="MyVariablesCopyright">Copyright © 2012, Raima Inc. All rights reserved.</span>
        </p>
        <script type="text/javascript" src="../../SkinSupport/MadCapBodyEnd.js">
        </script>
        <p class="MCWebHelpFramesetLink MCWebHelpFramesetLinkBottom" style="display: none;"><a href="../../../Default_CSH.htm#SQL/UDFREF/udfCheck.htm" style="">Open topic with navigation</a>
        </p>
    </body>
</html>